{"version":3,"names":["register","createReduxStore","reducer","actions","selectors","STORE_KEY","store"],"sources":["@quillforms/blocks/src/store/index.ts"],"sourcesContent":["import { register, createReduxStore } from '@wordpress/data';\r\nimport reducer from './reducer';\r\nimport * as actions from './actions';\r\nimport * as selectors from './selectors';\r\nimport { STORE_KEY } from './constants';\r\nimport type { State } from './reducer';\r\n\r\nimport type { DispatchFromMap, SelectFromMap } from '@quillforms/types';\r\n\r\nconst store: ReturnType< typeof createReduxStore > = createReduxStore<\r\n\tState,\r\n\ttypeof actions,\r\n\ttypeof selectors\r\n>( STORE_KEY, {\r\n\tactions,\r\n\tselectors,\r\n\treducer,\r\n} );\r\n\r\nexport default store;\r\nregister( store );\r\n\r\ndeclare module '@wordpress/data' {\r\n\tfunction dispatch(\r\n\t\tkey: typeof STORE_KEY\r\n\t): DispatchFromMap< typeof actions >;\r\n\tfunction select( key: typeof STORE_KEY ): SelectFromMap< typeof selectors >;\r\n\tfunction useSelect< R >(\r\n\t\tselector: ( customSelect: typeof select ) => R,\r\n\t\tdeps?: any[]\r\n\t): R;\r\n\tfunction useDispatch(\r\n\t\tkey: typeof STORE_KEY\r\n\t): DispatchFromMap< typeof actions >;\r\n}\r\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,gBAAgB,QAAQ,iBAAiB;AAC5D,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,KAAKC,OAAO,MAAM,WAAW;AACpC,OAAO,KAAKC,SAAS,MAAM,aAAa;AACxC,SAASC,SAAS,QAAQ,aAAa;AAKvC,MAAMC,KAA4C,GAAGL,gBAAgB,CAIlEI,SAAS,EAAE;EACbF,OAAO;EACPC,SAAS;EACTF;AACD,CAAE,CAAC;AAEH,eAAeI,KAAK;AACpBN,QAAQ,CAAEM,KAAM,CAAC","ignoreList":[]}