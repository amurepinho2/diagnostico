{"version":3,"names":["_constants","require","_lodash","setBlockRendererSettings","blockRendererSettings","name","type","SET_BLOCK_RENDERER_SETTINGS","settings","exports","setBlockAdminSettings","blockAdminSettings","SET_BLOCK_ADMIN_SETTINGS","addBlockTypes","blockTypes","ADD_BLOCK_TYPES","castArray"],"sources":["@quillforms/blocks/src/store/actions.ts"],"sourcesContent":["import {\r\n\tSET_BLOCK_ADMIN_SETTINGS,\r\n\tADD_BLOCK_TYPES,\r\n\tSET_BLOCK_RENDERER_SETTINGS,\r\n} from './constants';\r\nimport type {\r\n\tBlockAdminSettings,\r\n\tBlockRendererSettings,\r\n\tBlockActionTypes,\r\n\tBlockTypeInterface,\r\n} from '../types';\r\nimport { castArray } from 'lodash';\r\n\r\n/**\r\n * Returns an action object used in registering block renderer settings.\r\n *\r\n * @param  blockRendererSettings Block renderer settings which define block renderer behavior.\r\n * @param  name                  The block name.\r\n *\r\n * @return Action object.\r\n */\r\nexport const setBlockRendererSettings = (\r\n\tblockRendererSettings: BlockRendererSettings,\r\n\tname: string\r\n): BlockActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_BLOCK_RENDERER_SETTINGS,\r\n\t\tsettings: blockRendererSettings,\r\n\t\tname,\r\n\t};\r\n};\r\n\r\n/**\r\n * Returns an action object used in registering block editor configuration.\r\n *\r\n * @param  blockAdminSettings Block admin settings which defines block behavior at admin.\r\n * @param  name               The block name.\r\n *\r\n * @return Action object.\r\n */\r\nexport const setBlockAdminSettings = (\r\n\tblockAdminSettings: BlockAdminSettings,\r\n\tname: string\r\n): BlockActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_BLOCK_ADMIN_SETTINGS,\r\n\t\tsettings: blockAdminSettings,\r\n\t\tname,\r\n\t};\r\n};\r\n\r\n/**\r\n * Returns an action object used in signalling that block types have been added.\r\n *\r\n * @param  blockTypes Block types received.\r\n *\r\n * @return Action object.\r\n */\r\nexport const addBlockTypes = (\r\n\tblockTypes: BlockTypeInterface | BlockTypeInterface[]\r\n): BlockActionTypes => {\r\n\treturn {\r\n\t\ttype: ADD_BLOCK_TYPES,\r\n\t\tblockTypes: castArray( blockTypes ),\r\n\t};\r\n};\r\n"],"mappings":";;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AAWA,IAAAC,OAAA,GAAAD,OAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAME,wBAAwB,GAAGA,CACvCC,qBAA4C,EAC5CC,IAAY,KACU;EACtB,OAAO;IACNC,IAAI,EAAEC,sCAA2B;IACjCC,QAAQ,EAAEJ,qBAAqB;IAC/BC;EACD,CAAC;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPAI,OAAA,CAAAN,wBAAA,GAAAA,wBAAA;AAQO,MAAMO,qBAAqB,GAAGA,CACpCC,kBAAsC,EACtCN,IAAY,KACU;EACtB,OAAO;IACNC,IAAI,EAAEM,mCAAwB;IAC9BJ,QAAQ,EAAEG,kBAAkB;IAC5BN;EACD,CAAC;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AANAI,OAAA,CAAAC,qBAAA,GAAAA,qBAAA;AAOO,MAAMG,aAAa,GACzBC,UAAqD,IAC/B;EACtB,OAAO;IACNR,IAAI,EAAES,0BAAe;IACrBD,UAAU,EAAE,IAAAE,iBAAS,EAAEF,UAAW;EACnC,CAAC;AACF,CAAC;AAACL,OAAA,CAAAI,aAAA,GAAAA,aAAA","ignoreList":[]}