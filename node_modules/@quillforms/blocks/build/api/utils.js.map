{"version":3,"names":["_lodash","require","_registration","sanitizeBlockAttributes","blockName","attributes","blockType","getBlockType","undefined","Error","reduce","accumulator","schema","key","value","hasOwnProperty","default","sanitizeBlocks","blocks","isEmpty","map","block","name","innerBlocks","size","exports"],"sources":["@quillforms/blocks/src/api/utils.ts"],"sourcesContent":["/**\r\n * External Dependencies\r\n */\r\nimport { reduce, size, isEmpty, map } from 'lodash';\r\nimport type { BlockAttributes, FormBlocks } from '@quillforms/types';\r\n\r\n/**\r\n * Internal Dependencies\r\n */\r\nimport { getBlockType } from './registration';\r\n\r\nexport function sanitizeBlockAttributes(\r\n\tblockName: string,\r\n\tattributes: BlockAttributes\r\n) {\r\n\t// Get the block type\r\n\tconst blockType = getBlockType( blockName );\r\n\r\n\tif ( undefined === blockType ) {\r\n\t\tthrow new Error( `Block type '${ blockName }' is not registered.` );\r\n\t}\r\n\t// Ensure attributes contains only values defined by block type, and merge\r\n\t// default values for missing attributes.\r\n\treturn reduce(\r\n\t\tblockType.attributes,\r\n\t\t( accumulator, schema, key ) => {\r\n\t\t\tconst value = attributes[ key ];\r\n\r\n\t\t\tif ( undefined !== value ) {\r\n\t\t\t\taccumulator[ key ] = value;\r\n\t\t\t} else if ( schema.hasOwnProperty( 'default' ) ) {\r\n\t\t\t\taccumulator[ key ] = schema.default;\r\n\t\t\t}\r\n\r\n\t\t\treturn accumulator;\r\n\t\t},\r\n\t\t{} as Record< string, unknown >\r\n\t);\r\n}\r\n\r\n/**\r\n * Sanitize blocks\r\n * Transform unknwon blocks and sanitize block attributes\r\n *\r\n * @param {FormBlocks} blocks The form blocks to be sanitized\r\n *\r\n * @return {FormBlocks} The sanitized blocks\r\n */\r\nexport const sanitizeBlocks = ( blocks: FormBlocks ): FormBlocks => {\r\n\tif ( isEmpty( blocks ) ) {\r\n\t\treturn [];\r\n\t}\r\n\r\n\treturn map( blocks, ( block ) => {\r\n\t\tif ( getBlockType( block.name ) ) {\r\n\t\t\tif( typeof( block?.innerBlocks ) !== 'undefined' && size( block?.innerBlocks ) > 0 ) { \r\n\t\t\t\treturn {\r\n\t\t\t\t\t...block,\r\n\t\t\t\t\tattributes: sanitizeBlockAttributes(\r\n\t\t\t\t\t\tblock.name,\r\n\t\t\t\t\t\tblock.attributes ? block.attributes : {}\r\n\t\t\t\t\t),\r\n\t\t\t\t\tinnerBlocks: sanitizeBlocks( block.innerBlocks )\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...block,\r\n\t\t\t\tattributes: sanitizeBlockAttributes(\r\n\t\t\t\t\tblock.name,\r\n\t\t\t\t\tblock.attributes ? block.attributes : {}\r\n\t\t\t\t),\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn {\r\n\t\t\t...block,\r\n\t\t\tname: 'unknown',\r\n\t\t\tattributes: sanitizeBlockAttributes(\r\n\t\t\t\t'unknown',\r\n\t\t\t\tblock.attributes ? block.attributes : {}\r\n\t\t\t),\r\n\t\t};\r\n\t} );\r\n};\r\n"],"mappings":";;;;;;;AAGA,IAAAA,OAAA,GAAAC,OAAA;AAMA,IAAAC,aAAA,GAAAD,OAAA;AATA;AACA;AACA;;AAIA;AACA;AACA;;AAGO,SAASE,uBAAuBA,CACtCC,SAAiB,EACjBC,UAA2B,EAC1B;EACD;EACA,MAAMC,SAAS,GAAG,IAAAC,0BAAY,EAAEH,SAAU,CAAC;EAE3C,IAAKI,SAAS,KAAKF,SAAS,EAAG;IAC9B,MAAM,IAAIG,KAAK,CAAG,eAAeL,SAAW,sBAAsB,CAAC;EACpE;EACA;EACA;EACA,OAAO,IAAAM,cAAM,EACZJ,SAAS,CAACD,UAAU,EACpB,CAAEM,WAAW,EAAEC,MAAM,EAAEC,GAAG,KAAM;IAC/B,MAAMC,KAAK,GAAGT,UAAU,CAAEQ,GAAG,CAAE;IAE/B,IAAKL,SAAS,KAAKM,KAAK,EAAG;MAC1BH,WAAW,CAAEE,GAAG,CAAE,GAAGC,KAAK;IAC3B,CAAC,MAAM,IAAKF,MAAM,CAACG,cAAc,CAAE,SAAU,CAAC,EAAG;MAChDJ,WAAW,CAAEE,GAAG,CAAE,GAAGD,MAAM,CAACI,OAAO;IACpC;IAEA,OAAOL,WAAW;EACnB,CAAC,EACD,CAAC,CACF,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMM,cAAc,GAAKC,MAAkB,IAAkB;EACnE,IAAK,IAAAC,eAAO,EAAED,MAAO,CAAC,EAAG;IACxB,OAAO,EAAE;EACV;EAEA,OAAO,IAAAE,WAAG,EAAEF,MAAM,EAAIG,KAAK,IAAM;IAChC,IAAK,IAAAd,0BAAY,EAAEc,KAAK,CAACC,IAAK,CAAC,EAAG;MACjC,IAAI,OAAQD,KAAK,EAAEE,WAAa,KAAK,WAAW,IAAI,IAAAC,YAAI,EAAEH,KAAK,EAAEE,WAAY,CAAC,GAAG,CAAC,EAAG;QACpF,OAAO;UACN,GAAGF,KAAK;UACRhB,UAAU,EAAEF,uBAAuB,CAClCkB,KAAK,CAACC,IAAI,EACVD,KAAK,CAAChB,UAAU,GAAGgB,KAAK,CAAChB,UAAU,GAAG,CAAC,CACxC,CAAC;UACDkB,WAAW,EAAEN,cAAc,CAAEI,KAAK,CAACE,WAAY;QAChD,CAAC;MACF;MACA,OAAO;QACN,GAAGF,KAAK;QACRhB,UAAU,EAAEF,uBAAuB,CAClCkB,KAAK,CAACC,IAAI,EACVD,KAAK,CAAChB,UAAU,GAAGgB,KAAK,CAAChB,UAAU,GAAG,CAAC,CACxC;MACD,CAAC;IACF;IACA,OAAO;MACN,GAAGgB,KAAK;MACRC,IAAI,EAAE,SAAS;MACfjB,UAAU,EAAEF,uBAAuB,CAClC,SAAS,EACTkB,KAAK,CAAChB,UAAU,GAAGgB,KAAK,CAAChB,UAAU,GAAG,CAAC,CACxC;IACD,CAAC;EACF,CAAE,CAAC;AACJ,CAAC;AAACoB,OAAA,CAAAR,cAAA,GAAAA,cAAA","ignoreList":[]}