"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _adminComponents = require("@quillforms/admin-components");
/**
 * QuillForms Dependencies
 */

/**
 * WordPress Dependencies
 */

const NumberControls = props => {
  const {
    attributes: {
      setMin,
      min,
      setMax,
      max
    },
    setAttributes
  } = props;
  const MAX_NUMBER = 99999999999999;
  const setMinHandler = val => {
    let assignedValue = val;
    if (assignedValue < 0) assignedValue = 0;
    if (setMax && max && assignedValue > max) assignedValue = max;
    setAttributes({
      min: assignedValue
    });
  };
  const setMaxHandler = val => {
    let assignedValue = val;
    if (assignedValue < 1) assignedValue = 1;
    if (setMin && min && assignedValue < min) assignedValue = min;
    setAttributes({
      max: assignedValue
    });
  };
  return (0, _react.createElement)(_react.Fragment, null, (0, _react.createElement)(_adminComponents.BaseControl, null, (0, _react.createElement)(_adminComponents.ControlWrapper, {
    orientation: "horizontal"
  }, (0, _react.createElement)(_adminComponents.ControlLabel, {
    label: "Set min number"
  }), (0, _react.createElement)(_adminComponents.ToggleControl, {
    checked: setMin,
    onChange: () => {
      setAttributes({
        setMin: !setMin
      });
      setMaxHandler(1);
    }
  })), setMin && (0, _react.createElement)(_adminComponents.TextControl, {
    type: "number",
    placeholder: '0-' + (setMax && max ? max : MAX_NUMBER),
    value: min,
    onChange: val => setAttributes({
      min: val
    }),
    onBlur: () => setMinHandler(min)
  })), (0, _react.createElement)(_adminComponents.BaseControl, null, (0, _react.createElement)(_adminComponents.ControlWrapper, {
    orientation: "horizontal"
  }, (0, _react.createElement)(_adminComponents.ControlLabel, {
    label: "Set max number"
  }), (0, _react.createElement)("div", {
    role: "presentation",
    className: "switch-control-wrapper"
  }, (0, _react.createElement)(_adminComponents.ToggleControl, {
    checked: setMax,
    onChange: () => {
      setAttributes({
        setMax: !setMax
      });
      setMaxHandler(1);
    }
  }))), setMax && (0, _react.createElement)(_adminComponents.TextControl, {
    type: "number",
    placeholder: '' + (setMin && min ? min : 1) + '-' + MAX_NUMBER,
    value: max,
    onChange: val => setAttributes({
      max: val
    }),
    onBlur: () => setMaxHandler(max)
  })));
};
var _default = exports.default = NumberControls;
//# sourceMappingURL=controls.js.map