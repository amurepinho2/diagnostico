"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _adminComponents = require("@quillforms/admin-components");
var _data = require("@wordpress/data");
var _emotion = require("emotion");
/**
 * QuillForms Dependencies
 */

/**
 * WordPress Dependencies
 */

/**
 * External Dependencies
 */

const DateControls = props => {
  const {
    id,
    attributes: {
      format,
      separator
    },
    setAttributes
  } = props;
  const formatOptions = [{
    key: 'MMDDYYYY',
    name: 'MMDDYYYY'
  }, {
    key: 'DDMMYYYY',
    name: 'DDMMYYYY'
  }, {
    key: 'YYYYMMDD',
    name: 'YYYYMMDD'
  }];
  const separatorOptions = [{
    key: '/',
    name: '/'
  }, {
    key: '-',
    name: '-'
  }, {
    key: '.',
    name: '.'
  }];
  const {
    setFieldAnswer,
    setIsFieldAnswered,
    setIsFieldValid,
    setFieldValidationErr
  } = (0, _data.useDispatch)('quillForms/renderer-core');
  return (0, _react.createElement)(_adminComponents.BaseControl, null, (0, _react.createElement)(_adminComponents.ControlWrapper, {
    orientation: "vertical"
  }, (0, _react.createElement)(_adminComponents.ControlLabel, {
    label: "Date Format"
  }), (0, _react.createElement)(_adminComponents.SelectControl, {
    className: (0, _emotion.css)`
						margin-top: 5px;
					`,
    onChange: ({
      selectedItem
    }) => {
      // Formatting changes can cause errors if the field has value already.
      // The problem comes when trying to assign invalid values to month or year or day.
      // That's why we are going to reset the field value.
      // The ideal solution should be reformatting the existing value to the new format not just resetting.
      setFieldAnswer(id, '');
      setIsFieldValid(id, true);
      setIsFieldAnswered(id, false);
      setFieldValidationErr(id, null);
      setAttributes({
        format: selectedItem.key
      });
    },
    options: formatOptions,
    value: formatOptions.find(option => option.key === format)
  }), (0, _react.createElement)(_adminComponents.SelectControl, {
    className: (0, _emotion.css)`
						margin-top: 10px;
					`,
    value: separatorOptions.find(option => option.key === separator),
    onChange: ({
      selectedItem
    }) => {
      // Formatting changes can cause errors if the field has value already.
      // The problem comes when trying to assign invalid values to month or year or day.
      // That's why we are going to reset the field value.
      // The ideal solution should be reformatting the existing value to the new format not just resetting.
      setFieldAnswer(id, '');
      setIsFieldValid(id, true);
      setIsFieldAnswered(id, false);
      setFieldValidationErr(id, null);
      setAttributes({
        separator: selectedItem.key
      });
    },
    options: separatorOptions
  })));
};
var _default = exports.default = DateControls;
//# sourceMappingURL=controls.js.map