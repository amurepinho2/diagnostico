{"version":3,"names":["Transforms","Editor","Range","Button","LinkIcon","Link","editor","insertLink","url","selection","wrapLink","isLinkActive","link","nodes","match","n","type","unwrapLink","unwrapNodes","isCollapsed","children","text","insertNodes","wrapNodes","split","collapse","edge","createElement","active","onMouseDown","event","preventDefault","window","prompt"],"sources":["@quillforms/admin-components/src/rich-text/components/link/index.tsx"],"sourcesContent":["/**\n * External Dependencies\n */\nimport { Transforms, Editor, Range } from 'slate';\nimport { CustomNode } from '../../types';\n\n/**\n * Inernal Dependencies\n */\nimport Button from '../button';\nimport LinkIcon from './link-icon';\n\ninterface Props {\n\teditor: Editor;\n}\nconst Link: React.FC< Props > = ( { editor } ) => {\n\tconst insertLink = ( url: string ) => {\n\t\tif ( editor.selection ) {\n\t\t\twrapLink( url );\n\t\t}\n\t};\n\tconst isLinkActive = () => {\n\t\tconst [ link ] = Editor.nodes( editor, {\n\t\t\tmatch: ( n: CustomNode ) => n.type === 'link',\n\t\t} );\n\t\treturn !! link;\n\t};\n\n\tconst unwrapLink = () => {\n\t\tTransforms.unwrapNodes( editor, {\n\t\t\tmatch: ( n: CustomNode ) => n.type === 'link',\n\t\t} );\n\t};\n\n\tconst wrapLink = ( url ) => {\n\t\tif ( isLinkActive() ) {\n\t\t\tunwrapLink();\n\t\t}\n\n\t\tconst { selection } = editor;\n\t\tconst isCollapsed = selection && Range.isCollapsed( selection );\n\t\tconst link = {\n\t\t\ttype: 'link',\n\t\t\turl,\n\t\t\tchildren: isCollapsed ? [ { text: url } ] : [],\n\t\t};\n\n\t\tif ( isCollapsed ) {\n\t\t\tTransforms.insertNodes( editor, link );\n\t\t} else {\n\t\t\tTransforms.wrapNodes( editor, link, { split: true } );\n\t\t\tTransforms.collapse( editor, { edge: 'end' } );\n\t\t}\n\t};\n\n\treturn (\n\t\t<Button\n\t\t\tactive={ isLinkActive() }\n\t\t\tonMouseDown={ ( event ) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif ( isLinkActive() ) {\n\t\t\t\t\tunwrapLink();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// eslint-disable-next-line no-alert\n\t\t\t\tconst url = window.prompt( 'Enter the URL of the link:' );\n\t\t\t\tif ( ! url ) return;\n\t\t\t\tinsertLink( url );\n\t\t\t} }\n\t\t>\n\t\t\t<LinkIcon />\n\t\t</Button>\n\t);\n};\nexport default Link;\n"],"mappings":";AAAA;AACA;AACA;AACA,SAASA,UAAU,EAAEC,MAAM,EAAEC,KAAK,QAAQ,OAAO;AAGjD;AACA;AACA;AACA,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,QAAQ,MAAM,aAAa;AAKlC,MAAMC,IAAuB,GAAGA,CAAE;EAAEC;AAAO,CAAC,KAAM;EACjD,MAAMC,UAAU,GAAKC,GAAW,IAAM;IACrC,IAAKF,MAAM,CAACG,SAAS,EAAG;MACvBC,QAAQ,CAAEF,GAAI,CAAC;IAChB;EACD,CAAC;EACD,MAAMG,YAAY,GAAGA,CAAA,KAAM;IAC1B,MAAM,CAAEC,IAAI,CAAE,GAAGX,MAAM,CAACY,KAAK,CAAEP,MAAM,EAAE;MACtCQ,KAAK,EAAIC,CAAa,IAAMA,CAAC,CAACC,IAAI,KAAK;IACxC,CAAE,CAAC;IACH,OAAO,CAAC,CAAEJ,IAAI;EACf,CAAC;EAED,MAAMK,UAAU,GAAGA,CAAA,KAAM;IACxBjB,UAAU,CAACkB,WAAW,CAAEZ,MAAM,EAAE;MAC/BQ,KAAK,EAAIC,CAAa,IAAMA,CAAC,CAACC,IAAI,KAAK;IACxC,CAAE,CAAC;EACJ,CAAC;EAED,MAAMN,QAAQ,GAAKF,GAAG,IAAM;IAC3B,IAAKG,YAAY,CAAC,CAAC,EAAG;MACrBM,UAAU,CAAC,CAAC;IACb;IAEA,MAAM;MAAER;IAAU,CAAC,GAAGH,MAAM;IAC5B,MAAMa,WAAW,GAAGV,SAAS,IAAIP,KAAK,CAACiB,WAAW,CAAEV,SAAU,CAAC;IAC/D,MAAMG,IAAI,GAAG;MACZI,IAAI,EAAE,MAAM;MACZR,GAAG;MACHY,QAAQ,EAAED,WAAW,GAAG,CAAE;QAAEE,IAAI,EAAEb;MAAI,CAAC,CAAE,GAAG;IAC7C,CAAC;IAED,IAAKW,WAAW,EAAG;MAClBnB,UAAU,CAACsB,WAAW,CAAEhB,MAAM,EAAEM,IAAK,CAAC;IACvC,CAAC,MAAM;MACNZ,UAAU,CAACuB,SAAS,CAAEjB,MAAM,EAAEM,IAAI,EAAE;QAAEY,KAAK,EAAE;MAAK,CAAE,CAAC;MACrDxB,UAAU,CAACyB,QAAQ,CAAEnB,MAAM,EAAE;QAAEoB,IAAI,EAAE;MAAM,CAAE,CAAC;IAC/C;EACD,CAAC;EAED,OACCC,aAAA,CAACxB,MAAM;IACNyB,MAAM,EAAGjB,YAAY,CAAC,CAAG;IACzBkB,WAAW,EAAKC,KAAK,IAAM;MAC1BA,KAAK,CAACC,cAAc,CAAC,CAAC;MACtB,IAAKpB,YAAY,CAAC,CAAC,EAAG;QACrBM,UAAU,CAAC,CAAC;QACZ;MACD;MACA;MACA,MAAMT,GAAG,GAAGwB,MAAM,CAACC,MAAM,CAAE,4BAA6B,CAAC;MACzD,IAAK,CAAEzB,GAAG,EAAG;MACbD,UAAU,CAAEC,GAAI,CAAC;IAClB;EAAG,GAEHmB,aAAA,CAACvB,QAAQ,MAAE,CACJ,CAAC;AAEX,CAAC;AACD,eAAeC,IAAI","ignoreList":[]}