{"version":3,"names":["useState","useEffect","useMemo","MappingRow","MappingList","sections","options","initial","onChange","initialMappingRows","result","key","value","Object","entries","push","option","required","find","item","length","mappingRows","setMappingRows","selectedKeys","map","row","fields","type","createElement","fieldRow","index","keyProps","filter","includes","state","newState","disabled","valueProps","customize","combobox","onAddClick","splice","onRemoveClick","undefined"],"sources":["@quillforms/admin-components/src/mapping-list/index.tsx"],"sourcesContent":["/**\n * WordPress Dependencies\n */\nimport { Option, Sections } from '../mapping-row/key-control';\nimport { CustomizeFunction } from '../combobox-control';\nimport { useState, useEffect, useMemo } from 'react';\n\n/**\n * Internal Dependencies\n */\nimport MappingRow from '../mapping-row';\n\ntype Options = ( Option & {\n\trequired?: boolean; // makes the option disabled and added by default.\n\tcombobox?: {\n\t\tcustomize?: CustomizeFunction;\n\t};\n} )[];\n\ntype MappingRowValue = {\n\tkey: string;\n\tvalue: {\n\t\ttype?: string;\n\t\tvalue?: string;\n\t};\n};\n\ntype Fields = {\n\t[ key: string ]: { type: string; value: string };\n};\n\ninterface Props {\n\tsections?: Sections; // key sections.\n\toptions?: Options; // key options.\n\tinitial?: Fields; // used for setup initial mapping rows state.\n\tonChange: ( fields: Fields ) => void; // fields contain only the data of valid rows.\n}\n\nconst MappingList: React.FC< Props > = ( {\n\tsections,\n\toptions,\n\tinitial,\n\tonChange,\n} ) => {\n\t// initial mapping rows.\n\tconst initialMappingRows: MappingRowValue[] = useMemo( () => {\n\t\tconst result: MappingRowValue[] = [];\n\t\t// first add the initial fields.\n\t\tfor ( const [ key, value ] of Object.entries( initial ?? {} ) ) {\n\t\t\tresult.push( {\n\t\t\t\tkey,\n\t\t\t\tvalue,\n\t\t\t} );\n\t\t}\n\t\t// then add the required options.\n\t\tfor ( const option of options ?? [] ) {\n\t\t\tif (\n\t\t\t\toption.required &&\n\t\t\t\t! result.find( ( item ) => item.key === option.value )\n\t\t\t) {\n\t\t\t\tresult.push( {\n\t\t\t\t\tkey: option.value,\n\t\t\t\t\tvalue: {},\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\t// add an empty option if there is no options added.\n\t\tif ( result.length === 0 ) {\n\t\t\tresult.push( {\n\t\t\t\tkey: '',\n\t\t\t\tvalue: {},\n\t\t\t} );\n\t\t}\n\t\treturn result;\n\t}, [] );\n\n\t// mapping rows state.\n\tconst [ mappingRows, setMappingRows ] =\n\t\tuseState< MappingRowValue[] >( initialMappingRows );\n\tconst selectedKeys = mappingRows.map( ( row ) => row.key );\n\n\t// call onChange\n\tuseEffect( () => {\n\t\tconst fields = {};\n\t\tfor ( const { key, value } of mappingRows ) {\n\t\t\tif ( key && value.type && value.value ) {\n\t\t\t\tfields[ key ] = value;\n\t\t\t}\n\t\t}\n\t\tonChange( fields );\n\t}, [ mappingRows ] );\n\n\treturn (\n\t\t<div>\n\t\t\t{ mappingRows.map( ( fieldRow, index ) => {\n\t\t\t\tconst option = options?.find(\n\t\t\t\t\t( option ) => option.value === fieldRow.key\n\t\t\t\t);\n\t\t\t\treturn (\n\t\t\t\t\t<MappingRow\n\t\t\t\t\t\tkey={ index }\n\t\t\t\t\t\tkeyProps={ {\n\t\t\t\t\t\t\tsections: sections,\n\t\t\t\t\t\t\toptions: options?.filter(\n\t\t\t\t\t\t\t\t( option ) =>\n\t\t\t\t\t\t\t\t\toption.value === fieldRow.key ||\n\t\t\t\t\t\t\t\t\t! selectedKeys.includes( option.value )\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tvalue: fieldRow.key,\n\t\t\t\t\t\t\tonChange: ( key ) => {\n\t\t\t\t\t\t\t\tsetMappingRows( ( state ) => {\n\t\t\t\t\t\t\t\t\tconst newState = [ ...state ];\n\t\t\t\t\t\t\t\t\tnewState[ index ] = {\n\t\t\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\t\t\tvalue: {},\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\treturn newState;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdisabled: option?.required,\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tvalueProps={ {\n\t\t\t\t\t\t\tvalue: fieldRow.value,\n\t\t\t\t\t\t\tonChange: ( value ) => {\n\t\t\t\t\t\t\t\tsetMappingRows( ( state ) => {\n\t\t\t\t\t\t\t\t\tconst newState = [ ...state ];\n\t\t\t\t\t\t\t\t\tnewState[ index ].value = value;\n\t\t\t\t\t\t\t\t\treturn newState;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcustomize: option?.combobox?.customize,\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tonAddClick={ () => {\n\t\t\t\t\t\t\tsetMappingRows( ( state ) => {\n\t\t\t\t\t\t\t\tconst newState = [ ...state ];\n\t\t\t\t\t\t\t\tnewState.splice( index + 1, 0, {\n\t\t\t\t\t\t\t\t\tkey: '',\n\t\t\t\t\t\t\t\t\tvalue: {},\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\treturn newState;\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tonRemoveClick={\n\t\t\t\t\t\t\toption?.required || mappingRows.length === 1\n\t\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t\t: () => {\n\t\t\t\t\t\t\t\t\t\tsetMappingRows( ( state ) => {\n\t\t\t\t\t\t\t\t\t\t\tconst newState = [ ...state ];\n\t\t\t\t\t\t\t\t\t\t\tnewState.splice( index, 1 );\n\t\t\t\t\t\t\t\t\t\t\treturn newState;\n\t\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t} ) }\n\t\t</div>\n\t);\n};\n\nexport default MappingList;\n"],"mappings":";AAAA;AACA;AACA;;AAGA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;;AAEpD;AACA;AACA;AACA,OAAOC,UAAU,MAAM,gBAAgB;AA4BvC,MAAMC,WAA8B,GAAGA,CAAE;EACxCC,QAAQ;EACRC,OAAO;EACPC,OAAO;EACPC;AACD,CAAC,KAAM;EACN;EACA,MAAMC,kBAAqC,GAAGP,OAAO,CAAE,MAAM;IAC5D,MAAMQ,MAAyB,GAAG,EAAE;IACpC;IACA,KAAM,MAAM,CAAEC,GAAG,EAAEC,KAAK,CAAE,IAAIC,MAAM,CAACC,OAAO,CAAEP,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAI,CAAC,CAAE,CAAC,EAAG;MAC/DG,MAAM,CAACK,IAAI,CAAE;QACZJ,GAAG;QACHC;MACD,CAAE,CAAC;IACJ;IACA;IACA,KAAM,MAAMI,MAAM,IAAIV,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAI,EAAE,EAAG;MACrC,IACCU,MAAM,CAACC,QAAQ,IACf,CAAEP,MAAM,CAACQ,IAAI,CAAIC,IAAI,IAAMA,IAAI,CAACR,GAAG,KAAKK,MAAM,CAACJ,KAAM,CAAC,EACrD;QACDF,MAAM,CAACK,IAAI,CAAE;UACZJ,GAAG,EAAEK,MAAM,CAACJ,KAAK;UACjBA,KAAK,EAAE,CAAC;QACT,CAAE,CAAC;MACJ;IACD;IACA;IACA,IAAKF,MAAM,CAACU,MAAM,KAAK,CAAC,EAAG;MAC1BV,MAAM,CAACK,IAAI,CAAE;QACZJ,GAAG,EAAE,EAAE;QACPC,KAAK,EAAE,CAAC;MACT,CAAE,CAAC;IACJ;IACA,OAAOF,MAAM;EACd,CAAC,EAAE,EAAG,CAAC;;EAEP;EACA,MAAM,CAAEW,WAAW,EAAEC,cAAc,CAAE,GACpCtB,QAAQ,CAAuBS,kBAAmB,CAAC;EACpD,MAAMc,YAAY,GAAGF,WAAW,CAACG,GAAG,CAAIC,GAAG,IAAMA,GAAG,CAACd,GAAI,CAAC;;EAE1D;EACAV,SAAS,CAAE,MAAM;IAChB,MAAMyB,MAAM,GAAG,CAAC,CAAC;IACjB,KAAM,MAAM;MAAEf,GAAG;MAAEC;IAAM,CAAC,IAAIS,WAAW,EAAG;MAC3C,IAAKV,GAAG,IAAIC,KAAK,CAACe,IAAI,IAAIf,KAAK,CAACA,KAAK,EAAG;QACvCc,MAAM,CAAEf,GAAG,CAAE,GAAGC,KAAK;MACtB;IACD;IACAJ,QAAQ,CAAEkB,MAAO,CAAC;EACnB,CAAC,EAAE,CAAEL,WAAW,CAAG,CAAC;EAEpB,OACCO,aAAA,cACGP,WAAW,CAACG,GAAG,CAAE,CAAEK,QAAQ,EAAEC,KAAK,KAAM;IACzC,MAAMd,MAAM,GAAGV,OAAO,EAAEY,IAAI,CACzBF,MAAM,IAAMA,MAAM,CAACJ,KAAK,KAAKiB,QAAQ,CAAClB,GACzC,CAAC;IACD,OACCiB,aAAA,CAACzB,UAAU;MACVQ,GAAG,EAAGmB,KAAO;MACbC,QAAQ,EAAG;QACV1B,QAAQ,EAAEA,QAAQ;QAClBC,OAAO,EAAEA,OAAO,EAAE0B,MAAM,CACrBhB,MAAM,IACPA,MAAM,CAACJ,KAAK,KAAKiB,QAAQ,CAAClB,GAAG,IAC7B,CAAEY,YAAY,CAACU,QAAQ,CAAEjB,MAAM,CAACJ,KAAM,CACxC,CAAC;QACDA,KAAK,EAAEiB,QAAQ,CAAClB,GAAG;QACnBH,QAAQ,EAAIG,GAAG,IAAM;UACpBW,cAAc,CAAIY,KAAK,IAAM;YAC5B,MAAMC,QAAQ,GAAG,CAAE,GAAGD,KAAK,CAAE;YAC7BC,QAAQ,CAAEL,KAAK,CAAE,GAAG;cACnBnB,GAAG;cACHC,KAAK,EAAE,CAAC;YACT,CAAC;YACD,OAAOuB,QAAQ;UAChB,CAAE,CAAC;QACJ,CAAC;QACDC,QAAQ,EAAEpB,MAAM,EAAEC;MACnB,CAAG;MACHoB,UAAU,EAAG;QACZzB,KAAK,EAAEiB,QAAQ,CAACjB,KAAK;QACrBJ,QAAQ,EAAII,KAAK,IAAM;UACtBU,cAAc,CAAIY,KAAK,IAAM;YAC5B,MAAMC,QAAQ,GAAG,CAAE,GAAGD,KAAK,CAAE;YAC7BC,QAAQ,CAAEL,KAAK,CAAE,CAAClB,KAAK,GAAGA,KAAK;YAC/B,OAAOuB,QAAQ;UAChB,CAAE,CAAC;QACJ,CAAC;QACDG,SAAS,EAAEtB,MAAM,EAAEuB,QAAQ,EAAED;MAC9B,CAAG;MACHE,UAAU,EAAGA,CAAA,KAAM;QAClBlB,cAAc,CAAIY,KAAK,IAAM;UAC5B,MAAMC,QAAQ,GAAG,CAAE,GAAGD,KAAK,CAAE;UAC7BC,QAAQ,CAACM,MAAM,CAAEX,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE;YAC9BnB,GAAG,EAAE,EAAE;YACPC,KAAK,EAAE,CAAC;UACT,CAAE,CAAC;UACH,OAAOuB,QAAQ;QAChB,CAAE,CAAC;MACJ,CAAG;MACHO,aAAa,EACZ1B,MAAM,EAAEC,QAAQ,IAAII,WAAW,CAACD,MAAM,KAAK,CAAC,GACzCuB,SAAS,GACT,MAAM;QACNrB,cAAc,CAAIY,KAAK,IAAM;UAC5B,MAAMC,QAAQ,GAAG,CAAE,GAAGD,KAAK,CAAE;UAC7BC,QAAQ,CAACM,MAAM,CAAEX,KAAK,EAAE,CAAE,CAAC;UAC3B,OAAOK,QAAQ;QAChB,CAAE,CAAC;MACH;IACH,CACD,CAAC;EAEJ,CAAE,CACE,CAAC;AAER,CAAC;AAED,eAAe/B,WAAW","ignoreList":[]}