import { createElement, Fragment } from "react";
/**
 * QuillForms Dependencies
 */
import { NavLink } from '@quillforms/navigation';
import ConfigApi from '@quillforms/config';

/**
 * WordPress Dependencies
 */
import { Icon } from '@wordpress/components';

/**
 * External Dependencies
 */
import { css } from 'emotion';

/** 
 * Internal Dependencies
 */
import lockIcon from './lock-icon';
const AddonFeatureAvailability = ({
  featureName,
  addonSlug,
  showLockIcon
}) => {
  const license = ConfigApi.getLicense();
  const addon = ConfigApi.getStoreAddons()[addonSlug];
  const isWPEnv = ConfigApi.isWPEnv();
  const featurePlanLabel = ConfigApi.getPlans()[addon.plan].label;
  const isPlanAccessible = ConfigApi.isPlanAccessible(addon.plan);
  let content = createElement("div", null);

  // if addon installed.
  if (isWPEnv && addon.is_installed) {
    // license note in case of invalid or low level license.
    let licenseNote = createElement("div", null);
    if (license?.status !== 'valid') {
      licenseNote = createElement("div", {
        className: "addon-feature-availability-license-note"
      }, "Renewing your license is recommended to receive updates for this addon.");
    } else if (!isPlanAccessible) {
      licenseNote = createElement("div", {
        className: "addon-feature-availability-license-note"
      }, "Upgrading your license to ", featurePlanLabel, " is recommended to receive updates for this addon.");
    }
    // if addon is active, shouldn't be reached in most cases.
    if (addon.is_active) {
      content = createElement("div", null, createElement("div", null, featureName, " is already available."), licenseNote);
      // else, the addon is not active -but installed-.
    } else {
      content = createElement("div", null, createElement("div", null, featureName, " is already available."), createElement("div", null, "Please activate ", createElement("b", null, addon.name), " addon from", ' ', createElement(NavLink, {
        to: `/admin.php?page=quillforms&path=addons`
      }, "addons page"), ' ', "to use it."), licenseNote);
    }
    // else, addon is not installed.
  } else {
    // if license is valid and the feature plan is accessible.
    if (license?.status === 'valid' && isPlanAccessible) {
      content = createElement("div", null, createElement("div", null, featureName, " is available for your plan."), createElement("div", null, "Please install and activate ", addon.name, " addon from", ' ', createElement(NavLink, {
        to: `/admin.php?page=quillforms&path=addons`
      }, "addons page"), ' ', "to use it."));
      // else, no license or the license is invalid or the feature of addon require higher plan.
    } else {
      content = createElement("div", null, showLockIcon && createElement(Icon, {
        className: "addon-feature-availability-lock-icon",
        icon: lockIcon,
        size: 120
      }), createElement("p", {
        className: css`
							font-size: 15px;
						`
      }, "We're sorry, ", featureName, " is not available", createElement("br", null), "on your plan. Please upgrade to the ", featurePlanLabel, ' ', "plan to unlock", createElement("br", null), "all of ", featurePlanLabel, " features."), createElement(Fragment, null, isWPEnv ? createElement("a", {
        href: "https://quillforms.com",
        target: "_blank",
        className: "addon-feature-availability-upgrade-button"
      }, "Upgrade to ", featurePlanLabel, "!") : createElement(NavLink, {
        to: "/admin.php?page=quillforms&path=checkout",
        className: "addon-feature-availability-upgrade-button"
      }, "Upgrade to ", featurePlanLabel, "! ")));
    }
  }
  return createElement("div", {
    className: "addon-feature-availability"
  }, content);
};
export default AddonFeatureAvailability;
//# sourceMappingURL=index.js.map