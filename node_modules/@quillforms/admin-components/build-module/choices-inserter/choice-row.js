import { createElement } from "react";
/**
 * WordPress Dependencies
 */
import { plus, closeSmall, dragHandle } from '@wordpress/icons';
import { Icon } from '@wordpress/components';
import { MediaUpload } from '@wordpress/media-utils';

/**
 * External Dependencies
 */
import { css } from 'emotion';

/**
 * Internal Depenedencies
 */
import { useChoiceContext } from './choices-context';
import TextControl from '../text-control';
import PictureIcon from './picture-icon';
const ChoiceRow = ({
  choices,
  index,
  provided
}) => {
  const {
    withAttachment,
    labelChangeHandler,
    addChoice,
    deleteChoice,
    deleteImageHandler,
    handleMediaUpload
  } = useChoiceContext();
  const item = choices[index];
  const {
    imageUrl
  } = item;
  return createElement("div", {
    className: "admin-components-choices-inserter__choice-row"
  }, createElement("div", {
    ...provided.dragHandleProps
  }, createElement(Icon, {
    icon: dragHandle
  })), withAttachment && createElement("div", {
    className: css`
						position: ABSOLUTE;
						left: 31px;
						z-index: 111111111;
						height: 34px;
						width: 34px;
						padding: 4px;
						display: flex;
						align-items: center;
						justify-content: center;
						border-right: 1px solid #e3e3e3;
					`
  }, imageUrl ? createElement("div", {
    className: css`
								width: 100%;
								height: 100%;
								background-image: url( ${imageUrl} );
								background-size: cover;
							`
  }, createElement("div", {
    className: css`
									position: absolute;
									top: -8px;
									right: -8px;
									background: #c34c50;
									width: 15px;
									height: 15px;
									display: flex;
									align-items: center;
									border-radius: 50%;
									cursor: pointer;
								`
  }, createElement(Icon, {
    className: css`
										fill: #fff;
									`,
    icon: closeSmall,
    onClick: () => {
      deleteImageHandler(index);
    }
  }))) : createElement(MediaUpload, {
    onSelect: media => handleMediaUpload(media, index),
    allowedTypes: ['image'],
    render: ({
      open
    }) => createElement(PictureIcon, {
      onClick: open
    })
  })), createElement(TextControl, {
    className: css`
					width: 100%;
					input.components-text-control__input {
						${withAttachment && `padding-left: 40px !important`}
					}
				`,
    value: item.label,
    onChange: val => labelChangeHandler(val, index)
  }), createElement("div", {
    className: "admin-components-choices-inserter__choice-actions"
  }, createElement("div", {
    className: "admin-components-choices-inserter__choice-add"
  }, createElement(Icon, {
    icon: plus,
    onClick: () => addChoice(index + 1)
  })), choices.length > 1 && createElement("div", {
    className: "admin-components-choices-inserter__choice-remove"
  }, createElement(Icon, {
    className: css`
								fill: #fff;
							`,
    icon: closeSmall,
    onClick: () => {
      deleteChoice(item.value);
    }
  }))));
};
export default ChoiceRow;
//# sourceMappingURL=choice-row.js.map