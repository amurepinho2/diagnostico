import { createElement, Fragment } from "react";
/**
 * External dependencies
 */
import { filter } from 'lodash';

/**
 * WordPress dependencies
 */
// @ts-expect-error
import { SnackbarList } from '@wordpress/components';
import { useSelect, useDispatch } from '@wordpress/data';
import { useEffect } from 'react';
const AdminNotices = () => {
  const {
    notices
  } = useSelect(select => {
    return {
      // @ts-expect-error
      notices: select('core/notices').getNotices()
    };
  });
  const {
    removeNotice
  } = useDispatch('core/notices');
  const snackbarNotices = filter(notices, {
    type: 'snackbar'
    // @ts-expect-error
  });
  useEffect(() => {
    if (snackbarNotices.length > 2) {
      snackbarNotices.slice(0, snackbarNotices.length - 2).forEach(notice => removeNotice(notice.id));
    }
  }, [snackbarNotices]);
  return createElement(Fragment, null, createElement(SnackbarList, {
    notices: snackbarNotices,
    className: "admin-components-admin-notices__snackbar",
    onRemove: removeNotice
  }));
};
export default AdminNotices;
//# sourceMappingURL=index.js.map