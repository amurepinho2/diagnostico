/**
 * WordPress Dependencies
 */
import { useSelect } from '@wordpress/data';
import HiddenFieldIcon from './hidden-field-icon';

/**
 * External Dependencies
 */
import { size } from 'lodash';

/**
 * Internal Dependencies
 */

const useHiddenFields = ({
  section
}) => {
  const {
    hiddenFields
  } = useSelect(select => {
    var _select$getHiddenFiel;
    return {
      hiddenFields: (_select$getHiddenFiel = select('quillForms/hidden-fields-editor'
      //@ts-ignore
      )?.getHiddenFields()) !== null && _select$getHiddenFiel !== void 0 ? _select$getHiddenFiel : {}
    };
  });
  const fields = [];
  if (size(hiddenFields) > 0) {
    for (const hiddenField of hiddenFields) {
      fields.push({
        type: 'hidden_field',
        value: hiddenField.name,
        label: hiddenField.name,
        iconBox: {
          color: '#aaa',
          icon: HiddenFieldIcon
        },
        section,
        isMergeTag: true
      });
    }
  }
  return fields;
};
export default useHiddenFields;
//# sourceMappingURL=use-hidden-fields.js.map