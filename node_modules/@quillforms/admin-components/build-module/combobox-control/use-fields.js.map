{"version":3,"names":["identAlphabetically","useSelect","forEach","size","getPlainExcerpt","useFields","section","blockTypes","formBlocks","select","getBlockTypes","getBlocks","blocks","block","index","name","supports","editable","push","order","innerBlocks","childBlock","childIndex","parseInt","fields","blockType","type","value","id","label","attributes","iconBox","icon","color","isMergeTag","other"],"sources":["@quillforms/admin-components/src/combobox-control/use-fields.ts"],"sourcesContent":["/**\n * Quill Forms Dependencies\n */\n\nimport { identAlphabetically } from '@quillforms/utils';\n\n/**\n * WordPress Dependencies\n */\nimport { useSelect } from '@wordpress/data';\n\n/**\n * External Dependencies\n */\nimport { forEach, size } from 'lodash';\n\n/**\n * Internal Dependencies\n */\nimport type { Options } from '.';\nimport { getPlainExcerpt } from '../rich-text';\nimport { FormBlocks } from '@quillforms/types/src';\n\nconst useFields = ( { section } ) => {\n\tconst { blockTypes, formBlocks } = useSelect( ( select ) => {\n\t\treturn {\n\t\t\tblockTypes: select( 'quillForms/blocks' ).getBlockTypes(),\n\t\t\t// @ts-expect-error\n\t\t\tformBlocks: select( 'quillForms/block-editor' ).getBlocks(),\n\t\t};\n\t} );\n\tconst blocks: FormBlocks = [];\n\n\tif ( size( formBlocks ) > 0 ) {\n\t\tforEach( formBlocks, ( block, index ) => {\n\t\t\tif ( blockTypes[ block.name ]?.supports?.editable ) {\n\t\t\t\tblocks.push( { ...block, order: index } );\n\t\t\t}\n\t\t\tif ( blockTypes[ block.name ]?.supports?.innerBlocks ) {\n\t\t\t\tif ( size( block?.innerBlocks ) > 0 ) {\n\t\t\t\t\tforEach( block.innerBlocks, ( childBlock, childIndex ) => {\n\t\t\t\t\t\tblocks.push( {\n\t\t\t\t\t\t\t...childBlock,\n\t\t\t\t\t\t\torder:\n\t\t\t\t\t\t\t\tindex +\n\t\t\t\t\t\t\t\tidentAlphabetically( parseInt( childIndex ) ),\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\tconst fields: Options = [];\n\tif ( size( blocks ) > 0 ) {\n\t\tfor ( const block of blocks ) {\n\t\t\tconst blockType = blockTypes[ block.name ];\n\t\t\tfields.push( {\n\t\t\t\ttype: 'field',\n\t\t\t\tvalue: block.id,\n\t\t\t\tlabel: block.attributes?.label\n\t\t\t\t\t? getPlainExcerpt( block.attributes.label )\n\t\t\t\t\t: '',\n\t\t\t\ticonBox: {\n\t\t\t\t\ticon: blockType?.icon,\n\t\t\t\t\tcolor: blockType?.color,\n\t\t\t\t},\n\t\t\t\tsection,\n\t\t\t\tisMergeTag: true,\n\t\t\t\tother: {\n\t\t\t\t\tname: block.name,\n\t\t\t\t},\n\t\t\t} );\n\t\t}\n\t}\n\n\treturn fields;\n};\n\nexport default useFields;\n"],"mappings":"AAAA;AACA;AACA;;AAEA,SAASA,mBAAmB,QAAQ,mBAAmB;;AAEvD;AACA;AACA;AACA,SAASC,SAAS,QAAQ,iBAAiB;;AAE3C;AACA;AACA;AACA,SAASC,OAAO,EAAEC,IAAI,QAAQ,QAAQ;;AAEtC;AACA;AACA;;AAEA,SAASC,eAAe,QAAQ,cAAc;AAG9C,MAAMC,SAAS,GAAGA,CAAE;EAAEC;AAAQ,CAAC,KAAM;EACpC,MAAM;IAAEC,UAAU;IAAEC;EAAW,CAAC,GAAGP,SAAS,CAAIQ,MAAM,IAAM;IAC3D,OAAO;MACNF,UAAU,EAAEE,MAAM,CAAE,mBAAoB,CAAC,CAACC,aAAa,CAAC,CAAC;MACzD;MACAF,UAAU,EAAEC,MAAM,CAAE,yBAA0B,CAAC,CAACE,SAAS,CAAC;IAC3D,CAAC;EACF,CAAE,CAAC;EACH,MAAMC,MAAkB,GAAG,EAAE;EAE7B,IAAKT,IAAI,CAAEK,UAAW,CAAC,GAAG,CAAC,EAAG;IAC7BN,OAAO,CAAEM,UAAU,EAAE,CAAEK,KAAK,EAAEC,KAAK,KAAM;MACxC,IAAKP,UAAU,CAAEM,KAAK,CAACE,IAAI,CAAE,EAAEC,QAAQ,EAAEC,QAAQ,EAAG;QACnDL,MAAM,CAACM,IAAI,CAAE;UAAE,GAAGL,KAAK;UAAEM,KAAK,EAAEL;QAAM,CAAE,CAAC;MAC1C;MACA,IAAKP,UAAU,CAAEM,KAAK,CAACE,IAAI,CAAE,EAAEC,QAAQ,EAAEI,WAAW,EAAG;QACtD,IAAKjB,IAAI,CAAEU,KAAK,EAAEO,WAAY,CAAC,GAAG,CAAC,EAAG;UACrClB,OAAO,CAAEW,KAAK,CAACO,WAAW,EAAE,CAAEC,UAAU,EAAEC,UAAU,KAAM;YACzDV,MAAM,CAACM,IAAI,CAAE;cACZ,GAAGG,UAAU;cACbF,KAAK,EACJL,KAAK,GACLd,mBAAmB,CAAEuB,QAAQ,CAAED,UAAW,CAAE;YAC9C,CAAE,CAAC;UACJ,CAAE,CAAC;QACJ;MACD;IACD,CAAE,CAAC;EACJ;EACA,MAAME,MAAe,GAAG,EAAE;EAC1B,IAAKrB,IAAI,CAAES,MAAO,CAAC,GAAG,CAAC,EAAG;IACzB,KAAM,MAAMC,KAAK,IAAID,MAAM,EAAG;MAC7B,MAAMa,SAAS,GAAGlB,UAAU,CAAEM,KAAK,CAACE,IAAI,CAAE;MAC1CS,MAAM,CAACN,IAAI,CAAE;QACZQ,IAAI,EAAE,OAAO;QACbC,KAAK,EAAEd,KAAK,CAACe,EAAE;QACfC,KAAK,EAAEhB,KAAK,CAACiB,UAAU,EAAED,KAAK,GAC3BzB,eAAe,CAAES,KAAK,CAACiB,UAAU,CAACD,KAAM,CAAC,GACzC,EAAE;QACLE,OAAO,EAAE;UACRC,IAAI,EAAEP,SAAS,EAAEO,IAAI;UACrBC,KAAK,EAAER,SAAS,EAAEQ;QACnB,CAAC;QACD3B,OAAO;QACP4B,UAAU,EAAE,IAAI;QAChBC,KAAK,EAAE;UACNpB,IAAI,EAAEF,KAAK,CAACE;QACb;MACD,CAAE,CAAC;IACJ;EACD;EAEA,OAAOS,MAAM;AACd,CAAC;AAED,eAAenB,SAAS","ignoreList":[]}