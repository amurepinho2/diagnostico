import { createElement } from "react";
/**
 * External Dependencies
 */
import { useState } from '@wordpress/element';
import { __ } from '@wordpress/i18n';
import { map } from 'lodash';
import { Button, ButtonGroup } from '@wordpress/components';

/**
 * Internal Dependencies
 */
import ControlWrapper from '../control-wrapper';
import ControlLabel from '../control-label';
export default function ResponsiveControl({
  label,
  desktopChildren,
  tabletChildren,
  mobileChildren
}) {
  const [deviceType, setDeviceType] = useState('Desktop');
  const devices = [{
    name: 'Desktop',
    title: "Desktop",
    itemClass: 'qf-desk-tab'
  }, {
    name: 'Mobile',
    key: 'mobile',
    title: 'Mobile',
    itemClass: 'qf-mobile-tab'
  }];
  const output = {};
  output.Mobile = mobileChildren;
  output.Tablet = tabletChildren;
  output.Desktop = desktopChildren;
  return createElement("div", {
    className: 'admin-components-responsive-control'
  }, createElement(ControlWrapper, {
    orientation: ""
  }, createElement(ControlLabel, {
    label: label
  }), createElement(ButtonGroup, {
    className: "responsive-options",
    "aria-label": __('Device', 'quillforms')
  }, map(devices, ({
    name,
    key,
    title,
    itemClass
  }) => createElement(Button, {
    key: key,
    className: `responsive-btn ${itemClass}${name === deviceType ? ' is-active' : ''}`,
    isSmall: true,
    "aria-pressed": deviceType === name,
    onClick: () => setDeviceType(name)
  }, title)))), createElement("div", {
    className: "measure-control-inner"
  }, output[deviceType] ? output[deviceType] : output.Desktop));
}
//# sourceMappingURL=index.js.map