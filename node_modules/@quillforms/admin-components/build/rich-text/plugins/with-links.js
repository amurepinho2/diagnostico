"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.withLinks = void 0;
var _slate = require("slate");
var _isUrl = _interopRequireDefault(require("is-url"));
const isLinkActive = editor => {
  const [link] = _slate.Editor.nodes(editor, {
    match: n => n.type === 'link'
  });
  return !!link;
};
const unwrapLink = editor => {
  _slate.Transforms.unwrapNodes(editor, {
    match: n => n.type === 'link'
  });
};
const wrapLink = (editor, url) => {
  if (isLinkActive(editor)) {
    unwrapLink(editor);
  }
  const {
    selection
  } = editor;
  const isCollapsed = selection && _slate.Range.isCollapsed(selection);
  const link = {
    type: 'link',
    url,
    children: isCollapsed ? [{
      text: url
    }] : []
  };
  if (isCollapsed) {
    _slate.Transforms.insertNodes(editor, link);
  } else {
    _slate.Transforms.wrapNodes(editor, link, {
      split: true
    });
    _slate.Transforms.collapse(editor, {
      edge: 'end'
    });
  }
};
const withLinks = editor => {
  const {
    insertData,
    insertText,
    isInline
  } = editor;
  editor.isInline = element => {
    return element.type === 'link' ? true : isInline(element);
  };
  editor.insertText = text => {
    if (text && (0, _isUrl.default)(text)) {
      wrapLink(editor, text);
    } else {
      insertText(text);
    }
  };
  editor.insertData = data => {
    const text = data.getData('text/plain');
    if (text && (0, _isUrl.default)(text)) {
      wrapLink(editor, text);
    } else {
      insertData(data);
    }
  };
  return editor;
};
exports.withLinks = withLinks;
//# sourceMappingURL=with-links.js.map