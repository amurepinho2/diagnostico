"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _navigation = require("@quillforms/navigation");
var _config = _interopRequireDefault(require("@quillforms/config"));
var _blockTypesListItem = _interopRequireDefault(require("../block-types-list-item"));
var _data = require("@wordpress/data");
var _classnames = _interopRequireDefault(require("classnames"));
var _lodash = require("lodash");
var _emotion = require("emotion");
var _proBlocksIcons = require("./pro-blocks-icons");
var _proLabel = _interopRequireDefault(require("../pro-label"));
var _button = require("../button");
/* eslint-disable no-shadow */
/**
 * QuillForms Dependencies
 */

/**
 * Internal Dependencies
 */

/**
 * WordPress Dependencies
 */

/**
 * External Dependencies
 */

const BlockTypesList = ({
  destinationIndex,
  parent
}) => {
  let {
    blockTypes,
    welcomeScreensLength
  } = (0, _data.useSelect)(select => {
    return {
      blockTypes: select('quillForms/blocks').getBlockTypes(),
      welcomeScreensLength: select('quillForms/block-editor'
      // @ts-expect-error
      ).getWelcomeScreensLength()
    };
  });
  const license = _config.default.getLicense();
  if (parent) {
    blockTypes = (0, _lodash.pickBy)(blockTypes, blockType => {
      return blockType.supports.editable === true && !blockType.supports.innerBlocks || blockType.name === 'statement';
    });
  }
  const proBlocks = {
    file: {
      title: 'File',
      color: '#ff9381',
      icon: (0, _react.createElement)(_proBlocksIcons.FileIcon, null)
    },
    'calendar-picker': {
      title: 'Calendar Picker',
      color: '#28354c',
      icon: (0, _react.createElement)(_proBlocksIcons.CalendarPickerIcon, null)
    },
    phone: {
      title: 'Phone',
      color: '#2cc31a',
      icon: (0, _react.createElement)(_proBlocksIcons.PhoneIcon, null)
    },
    'picture-choice': {
      title: 'Picture Choice',
      color: '#0d775f',
      icon: (0, _react.createElement)(_proBlocksIcons.PictureChoiceIcon, null)
    },
    signature: {
      title: 'Signature',
      color: '#2eaf8b',
      icon: (0, _react.createElement)(_proBlocksIcons.SignatureIcon, null)
    },
    'thankyou-screen': {
      title: 'Custom Thank You Screen & Redirect',
      color: '#bf5c73',
      icon: (0, _react.createElement)(_proBlocksIcons.ThankYouIcon, null)
    },
    'opinion-scale': {
      title: 'Opinion Scale',
      color: '#5d4096',
      icon: (0, _react.createElement)(_proBlocksIcons.OpinionScaleIcon, null)
    },
    rating: {
      title: 'Rating',
      color: '#ffd010',
      icon: (0, _react.createElement)(_proBlocksIcons.RatingIcon, null)
    },
    calendly: {
      title: 'Calendly',
      color: '#fff',
      icon: (0, _react.createElement)(_proBlocksIcons.CaledlyIcon, null)
    },
    "input-mask": {
      title: 'Input Mask',
      color: "#be9b7b",
      icon: (0, _react.createElement)(_proBlocksIcons.InputMaskIcon, null)
    }
  };
  return (0, _react.createElement)("div", {
    className: "admin-components-block-types-list"
  }, (0, _lodash.map)((0, _lodash.keys)(blockTypes), (blockName, index) => {
    let isDragDisabled = false;
    if (blockName === 'welcome-screen' && welcomeScreensLength >= 1) {
      isDragDisabled = true;
    }
    return (0, _react.createElement)("div", {
      key: blockName,
      style: {
        overflow: 'auto'
      }
    }, (0, _react.createElement)("div", {
      className: (0, _classnames.default)('admin-components-blocks-list__item-wrapper')
    }, (0, _react.createElement)(_blockTypesListItem.default, {
      destinationIndex: destinationIndex,
      parent: parent,
      index: index,
      blockName: blockName,
      disabled: isDragDisabled
    })));
  }), (0, _react.createElement)(_react.Fragment, null, Object.keys(proBlocks).map(blockName => {
    if (!blockTypes[blockName]) {
      return (0, _react.createElement)("div", {
        key: blockName,
        className: 'admin-components-blocks-list__item-wrapper'
      }, (0, _react.createElement)("div", {
        className: "admin-components-blocks-list-item disabled"
      }, (0, _react.createElement)("span", {
        className: "admin-components-blocks-list-item__icon-wrapper",
        style: {
          backgroundColor: proBlocks[blockName].color
        }
      }, (0, _react.createElement)("span", {
        className: "admin-components-blocks-list-item__icon"
      }, proBlocks[blockName].icon)), (0, _react.createElement)("span", {
        className: "admin-components-blocks-list-item__block-name"
      }, proBlocks[blockName].title), license?.status !== 'valid' ? (0, _react.createElement)(_proLabel.default, null) : (0, _react.createElement)(_button.Button, {
        isPrimary: true,
        isButton: true,
        className: (0, _emotion.css)`
												padding: 0 !important;
												background-color: #1e87f0;

												a {
													text-decoration: none;
													color: #fff;
													padding: 2px 8px;
													background-color: #1e87f0;
												}
											`
      }, (0, _react.createElement)(_navigation.NavLink, {
        to: `/admin.php?page=quillforms&path=addons`
      }, "Install"))));
    }
    return null;
  })));
};
var _default = exports.default = BlockTypesList;
//# sourceMappingURL=index.js.map