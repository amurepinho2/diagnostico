"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _reactWindow = require("react-window");
var _lodash = require("lodash");
var _choicesContext = require("./choices-context");
var _choiceWrapper = _interopRequireDefault(require("./choice-wrapper"));
var _choiceRow = _interopRequireDefault(require("./choice-row"));
var _dragDropContext = _interopRequireDefault(require("../drag-drop-context"));
var _droppable = _interopRequireDefault(require("../droppable"));
var _generateChoiceId = _interopRequireDefault(require("./generate-choice-id"));
/**
 * WordPress Dependencies
 */

/**
 * External Dependencies
 */

/**
 * Internal Dependencies
 */

const ChoicesInserter = ({
  choices,
  setChoices,
  withAttachment
}) => {
  const labelChangeHandler = (val, index) => {
    const $choices = (0, _lodash.cloneDeep)(choices);
    $choices[index] = {
      ...$choices[index],
      label: val
    };
    setChoices($choices);
  };
  const addChoice = at => {
    const $choices = (0, _lodash.cloneDeep)(choices);
    $choices.splice(at, 0, {
      value: (0, _generateChoiceId.default)(),
      label: ''
    });
    setChoices($choices);
  };
  const deleteChoice = value => {
    const newChoices = (0, _lodash.cloneDeep)(choices).filter(choice => choice.value !== value);
    setChoices(newChoices);
  };
  const deleteImageHandler = index => {
    const $choices = (0, _lodash.cloneDeep)(choices);
    $choices[index].imageUrl = undefined;
    setChoices($choices);
  };
  const handleMediaUpload = (media, index) => {
    const $choices = (0, _lodash.cloneDeep)(choices);
    $choices[index].imageUrl = media.url;
    setChoices($choices);
  };
  const context = {
    addChoice,
    labelChangeHandler,
    deleteChoice,
    deleteImageHandler,
    handleMediaUpload,
    withAttachment
  };
  return (0, _react.createElement)(_dragDropContext.default, {
    onDragEnd: result => {
      const {
        source,
        destination
      } = result;
      if (!result.destination || result.source.index === result.destination.index) {
        return;
      }
      const sourceIndex = source.index;
      const destinationIndex = destination?.index;
      const $choices = [...choices];
      const output = Array.from($choices);
      const [removed] = output.splice(sourceIndex, 1);
      if (destinationIndex !== undefined) {
        output.splice(destinationIndex, 0, removed);
        setChoices(output);
      }
    }
  }, (0, _react.createElement)(_choicesContext.ChoiceContextProvider
  // It is important to return the same object if props haven't
  // changed to avoid  unnecessary rerenders.
  // See https://reactjs.org/docs/context.html#caveats.
  , {
    value: (0, _react.useMemo)(() => context, Object.values(context))
  }, (0, _react.createElement)(_droppable.default, {
    droppableId: "CHOICES_DROP_AREA",
    mode: "virtual",
    renderClone: (provided, _snapshot, rubric) => {
      return (0, _react.createElement)("div", {
        ...provided.draggableProps,
        ...provided.dragHandleProps,
        ref: provided.innerRef,
        style: {
          ...provided.draggableProps.style,
          zIndex: 111111111
        }
      }, (0, _react.createElement)(_choiceRow.default, {
        choices: choices,
        index: rubric.source.index,
        provided: provided
      }));
    }
  }, (provided, snapshot) => {
    const itemCount = snapshot.isUsingPlaceholder ? choices.length + 1 : choices.length;
    return (0, _react.createElement)("div", {
      ref: provided.innerRef,
      ...provided.droppableProps
    }, (0, _react.createElement)(_reactWindow.FixedSizeList, {
      className: "admin-components-choices-inserter__choices-wrapper",
      outerRef: provided.innerRef,
      height: 250,
      width: '100%',
      itemCount: itemCount,
      itemSize: 54,
      itemData: choices
    }, _choiceWrapper.default));
  })));
};
var _default = exports.default = ChoicesInserter;
//# sourceMappingURL=index.js.map