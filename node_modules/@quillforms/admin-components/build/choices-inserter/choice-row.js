"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _icons = require("@wordpress/icons");
var _components = require("@wordpress/components");
var _mediaUtils = require("@wordpress/media-utils");
var _emotion = require("emotion");
var _choicesContext = require("./choices-context");
var _textControl = _interopRequireDefault(require("../text-control"));
var _pictureIcon = _interopRequireDefault(require("./picture-icon"));
/**
 * WordPress Dependencies
 */

/**
 * External Dependencies
 */

/**
 * Internal Depenedencies
 */

const ChoiceRow = ({
  choices,
  index,
  provided
}) => {
  const {
    withAttachment,
    labelChangeHandler,
    addChoice,
    deleteChoice,
    deleteImageHandler,
    handleMediaUpload
  } = (0, _choicesContext.useChoiceContext)();
  const item = choices[index];
  const {
    imageUrl
  } = item;
  return (0, _react.createElement)("div", {
    className: "admin-components-choices-inserter__choice-row"
  }, (0, _react.createElement)("div", {
    ...provided.dragHandleProps
  }, (0, _react.createElement)(_components.Icon, {
    icon: _icons.dragHandle
  })), withAttachment && (0, _react.createElement)("div", {
    className: (0, _emotion.css)`
						position: ABSOLUTE;
						left: 31px;
						z-index: 111111111;
						height: 34px;
						width: 34px;
						padding: 4px;
						display: flex;
						align-items: center;
						justify-content: center;
						border-right: 1px solid #e3e3e3;
					`
  }, imageUrl ? (0, _react.createElement)("div", {
    className: (0, _emotion.css)`
								width: 100%;
								height: 100%;
								background-image: url( ${imageUrl} );
								background-size: cover;
							`
  }, (0, _react.createElement)("div", {
    className: (0, _emotion.css)`
									position: absolute;
									top: -8px;
									right: -8px;
									background: #c34c50;
									width: 15px;
									height: 15px;
									display: flex;
									align-items: center;
									border-radius: 50%;
									cursor: pointer;
								`
  }, (0, _react.createElement)(_components.Icon, {
    className: (0, _emotion.css)`
										fill: #fff;
									`,
    icon: _icons.closeSmall,
    onClick: () => {
      deleteImageHandler(index);
    }
  }))) : (0, _react.createElement)(_mediaUtils.MediaUpload, {
    onSelect: media => handleMediaUpload(media, index),
    allowedTypes: ['image'],
    render: ({
      open
    }) => (0, _react.createElement)(_pictureIcon.default, {
      onClick: open
    })
  })), (0, _react.createElement)(_textControl.default, {
    className: (0, _emotion.css)`
					width: 100%;
					input.components-text-control__input {
						${withAttachment && `padding-left: 40px !important`}
					}
				`,
    value: item.label,
    onChange: val => labelChangeHandler(val, index)
  }), (0, _react.createElement)("div", {
    className: "admin-components-choices-inserter__choice-actions"
  }, (0, _react.createElement)("div", {
    className: "admin-components-choices-inserter__choice-add"
  }, (0, _react.createElement)(_components.Icon, {
    icon: _icons.plus,
    onClick: () => addChoice(index + 1)
  })), choices.length > 1 && (0, _react.createElement)("div", {
    className: "admin-components-choices-inserter__choice-remove"
  }, (0, _react.createElement)(_components.Icon, {
    className: (0, _emotion.css)`
								fill: #fff;
							`,
    icon: _icons.closeSmall,
    onClick: () => {
      deleteChoice(item.value);
    }
  }))));
};
var _default = exports.default = ChoiceRow;
//# sourceMappingURL=choice-row.js.map