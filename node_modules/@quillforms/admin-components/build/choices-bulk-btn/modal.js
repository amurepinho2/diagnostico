"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _components = require("@wordpress/components");
var _emotion = require("emotion");
var _classnames = _interopRequireDefault(require("classnames"));
var _reactLoaderSpinner = require("react-loader-spinner");
var _button = _interopRequireDefault(require("../button"));
/**
 * WordPress Dependencies.
 */

/**
 * External Dependencies
 */

/**
 * Internal Dependencies
 */

const ChoicesBulkModal = ({
  onCloseModal,
  onInsert
}) => {
  const [isInserting, setIsInserting] = (0, _react.useState)(false);
  const [bulkChoicesTxt, setBulkChoicesTxt] = (0, _react.useState)('');
  const ref = (0, _react.useRef)(null);
  (0, _react.useEffect)(() => {
    if (ref?.current) {
      ref.current.focus();
    }
  });
  return (0, _react.createElement)(_components.Modal, {
    className: (0, _classnames.default)('admin-components-choices-bulk-modal', (0, _emotion.css)`
					border: none !important;
					min-width: 350px !important;
					border-radius: 10px;
					z-index: 1111111;

					.components-modal__content {
						display: flex;
						flex-direction: column;
						justify-content: center;
						background: #eee;
						margin-top: 54px;
						min-height: 300px;
					}

					.components-modal__header {
						background: #313e57;
						.components-modal__header-heading {
							color: #fff;
						}
						.components-button.has-icon svg {
							fill: #fff;
						}
					}
				`),
    title: "Bulk Choices",
    onRequestClose: onCloseModal
  }, (0, _react.createElement)("p", {
    className: (0, _emotion.css)`
					marging-bottom: 10px;
				`
  }, (0, _react.createElement)("strong", null, "Insert each answer choice in a separate line ")), (0, _react.createElement)("textarea", {
    ref: ref,
    className: (0, _emotion.css)`
					width: 100%;
					height: 170px;
					overflow-y: auto;
					resize: none;
				`,
    onChange: e => setBulkChoicesTxt(e.target.value),
    value: bulkChoicesTxt
  }), (0, _react.createElement)("div", {
    className: (0, _emotion.css)`
					display: flex;
					margin-top: 10px;
					justify-content: flex-end;
				`
  }, (0, _react.createElement)(_button.default, {
    isDefault: true,
    isLarge: true,
    className: (0, _emotion.css)`
						margin-right: 10px !important;
					`,
    onClick: onCloseModal
  }, "Cancel"), (0, _react.createElement)(_button.default, {
    isLarge: true,
    className: (0, _emotion.css)`
						width: 70px;
						display: flex;
						justify-content: center;
						align-items: center;
					`,
    onClick: () => {
      if (isInserting) return;
      setIsInserting(true);
      onInsert(bulkChoicesTxt);
      setTimeout(() => {
        setIsInserting(false);
        onCloseModal();
      }, 0);
    },
    isPrimary: true
  }, "Done", (0, _react.createElement)(_react.Fragment, null, isInserting && (0, _react.createElement)("div", {
    className: (0, _emotion.css)`
									display: flex;
									justify-content: center;
									align-items: center;
									margin: 0px 10px;
								`
  }, (0, _react.createElement)(_reactLoaderSpinner.Oval, {
    color: "#00BFFF",
    height: 15,
    width: 15
  }))))));
};
var _default = exports.default = ChoicesBulkModal;
//# sourceMappingURL=modal.js.map