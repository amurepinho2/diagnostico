"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _emotion = require("emotion");
var _button = _interopRequireDefault(require("../button"));
var _modal = _interopRequireDefault(require("./modal"));
var _generateChoiceId = _interopRequireDefault(require("../choices-inserter/generate-choice-id"));
/**
 * WordPress Dependencies
 */

/**
 * External Dependencies
 */

/**
 * Internal Dependencies
 */

const ChoicesBulkBtn = ({
  choices,
  setChoices
}) => {
  const [modalOpen, setModalOpen] = (0, _react.useState)(false);
  const insertBulkChoices = txt => {
    const $choices = [...choices];
    txt.trim().split('\n').forEach(item => {
      $choices.push({
        value: (0, _generateChoiceId.default)(),
        label: item
      });
    });
    setChoices($choices);
  };
  return (0, _react.createElement)("div", {
    className: "admin-components-choices-bulk-btn"
  }, (0, _react.createElement)(_button.default, {
    isDefault: true,
    className: (0, _emotion.css)`
					display: inline-block;
					background: #000;
					color: #fff;
					padding: 5px;
					margin-top: 12px;
				`,
    onClick: () => setModalOpen(true)
  }, "Bulk Answers"), modalOpen && (0, _react.createElement)(_modal.default, {
    onInsert: txt => insertBulkChoices(txt),
    onCloseModal: () => setModalOpen(false)
  }));
};
var _default = exports.default = ChoicesBulkBtn;
//# sourceMappingURL=index.js.map