"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _useVariables = _interopRequireDefault(require("../../combobox-control/use-variables"));
var _components = require("@wordpress/components");
var _icons = require("@wordpress/icons");
var _ = require("../..");
var _classnames = _interopRequireDefault(require("classnames"));
var _emotion = require("emotion");
var _lodash = require("lodash");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const AdvancedDropdown = ({
  var0,
  var1,
  onChange
}) => {
  var _var1$value;
  const ref = (0, _react.useRef)(null);
  let options = [{
    type: 'input',
    label: "Enter a number"
  }];
  const variables = (0, _useVariables.default)({
    section: 'variables'
  }).filter(variable => variable.value !== var0.value).map(variable => {
    return {
      ...variable,
      label: (0, _react.createElement)("div", {
        className: (0, _emotion.css)`display: flex;align-items: center; 
            .admin-components-block-icon-box {
                width: 28px;
                display: flex;
                justify-content: center;
            }`
      }, (0, _react.createElement)(_.BlockIconBox, {
        icon: variable?.iconBox?.icon,
        color: variable?.iconBox?.color
      }), " ", (0, _react.createElement)("span", {
        className: (0, _emotion.css)`margin: 0 8px`
      }, variable?.label, " "))
    };
  });
  const handleChange = selected => {
    onChange(selected);
  };
  const handleNumberChange = val => {
    onChange({
      value: val,
      type: "input"
    });
  };
  const selectedVariable = variables?.find(variable => variable.value === var1.value);
  return (0, _react.createElement)("div", {
    className: (0, _classnames.default)("logic-conditions-advanced-dropdown", (0, _emotion.css)`
            cursor: ${var1?.type && var1?.type !== "input" ? "pointer" : "default"};
        `),
    ref: ref,
    onClick: event => {
      if (var1?.type && var1?.type !== "input") {
        event.stopPropagation();
        ref.current.querySelector('button').click();
      }
    }
  }, (0, _react.createElement)("div", {
    className: ""
  }, !var1.type || var1?.type === "input" ? (0, _react.createElement)(_.TextControl, {
    type: "number",
    placeholder: "Enter a number",
    value: (_var1$value = var1.value) !== null && _var1$value !== void 0 ? _var1$value : '',
    onChange: handleNumberChange
  }) : (0, _react.createElement)("div", {
    className: "logic-conditions-advanced-dropdown__variable-label"
  }, selectedVariable?.label)), (0, _react.createElement)(_components.DropdownMenu, {
    className: "logic-conditions-advanced-dropdown__menu",
    icon: _icons.chevronDown
  }, ({
    onClose
  }) => (0, _react.createElement)(_components.MenuGroup, null, options.map(option => (0, _react.createElement)(_components.MenuItem, {
    key: option.value,
    onClick: () => {
      handleChange(option);
      onClose();
    }
  }, option.label)), (0, _lodash.size)(variables) > 0 && (0, _react.createElement)(_react.Fragment, null, (0, _react.createElement)("div", {
    className: "combobox-control-select-section",
    onClick: ev => ev.stopPropagation()
  }, "Variables"), variables.map(option => (0, _react.createElement)(_components.MenuItem, {
    key: option.value,
    onClick: () => {
      handleChange(option);
      onClose();
    }
  }, option.label))))));
};
var _default = exports.default = AdvancedDropdown;
//# sourceMappingURL=index.js.map