export declare type LogicActionType = 'jump' | 'add' | 'substract' | 'divide' | 'multiply';
export declare type LogicConditionOperator = 'is' | 'is_not' | 'greater_than' | 'lower_than' | 'starts_with' | 'ends_with' | 'contains' | 'not_contains';
export declare type LogicCondition = {
    vars: [
        {
            type: string;
            value: string;
        },
        {
            value: string;
        }
    ];
    op: LogicConditionOperator;
};
export declare type EditorLogicCondition = {
    vars: [
        {
            type?: string;
            value?: string;
        },
        {
            value?: string;
        }
    ];
    op?: LogicConditionOperator;
};
export declare type LogicAction = {
    type: LogicActionType;
    target: string;
    value?: number | {
        type: 'field' | 'variable';
        value: string;
    };
    points?: Boolean;
    conditions: LogicCondition[][] | true;
};
export declare type FormLogicActions = {
    [BlockId: string]: LogicAction[];
};
export declare type FormLogicDefaultJumpTargets = {
    [BlockId: string]: string;
};
export declare type LogicVariable = {
    label: string;
    initialValue: number;
};
export declare type FormLogicVariables = {
    [VariableId: string]: LogicVariable;
};
export declare type FormLogic = {
    actions: FormLogicActions;
    defaultJumpTargets: FormLogicDefaultJumpTargets;
    variables: FormLogicVariables;
};
//# sourceMappingURL=form-logic.d.ts.map