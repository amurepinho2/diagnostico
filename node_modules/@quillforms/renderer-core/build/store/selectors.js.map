{"version":3,"names":["_data","require","_lodash","getBlocksRecursively","walkPath","allBlocks","forEach","block","push","name","size","innerBlocks","childBlock","exports","getSwiperState","state","swiper","getWalkPath","isAnimating","getCorrectIncorrectDisplay","correctIncorrectDisplay","getCurrentBlockId","currentBlockId","getWelcomeScreens","welcomeScreens","getThankYouScreens","thankyouScreens","getBlockById","id","find","isThankyouScreenActive","isWelcomeScreenActive","isCurrentBlockSafeToSwipe","isReviewing","submit","isSubmitting","getPaymentData","paymentData","getBlockCounterValue","blocksWithCounter","getFieldsBySupportCriteria","counterValue","findIndex","editableField","undefined","getEditableFieldsInCurrentPath","filter","select","hasBlockSupport","supportCriteria","blockTypesSelector","matched","feature","getAnswers","answers","getAnswersValues","mapValues","o","value","getAnsweredFieldsLength","answeredFields","pickBy","isAnswered","getFieldAnswerVal","answer","getInvalidAnswers","invalidFields","isValid","getInvalidFieldsLength","getFirstInvalidFieldId","invalidFieldsIds","Object","keys","firstField","includes","isAnsweredField","isValidField","hasValidFields","$block","$blockId","isFieldAnswerCorrect","isCorrect","isFieldAnswerLocked","isLocked","isFieldCorrectIncorrectScreenDisplayed","isCorrectIncorrectScreenDisplayed","isFieldPending","isPending","getPendingMsg","values","_answer$pendingMsg","pendingMsg","getFieldValidationErr","validationErr","isFocused","shouldFooterBeDisplayed","footerDisplay","getSubmissionErr","submissionErr","getCorrectAnswersCount","length","getIncorrectAnswersCount"],"sources":["@quillforms/renderer-core/src/store/selectors.ts"],"sourcesContent":["/**\r\n * QuillForms Dependencies\r\n */\r\nimport type { FormBlock, FormBlocks } from '@quillforms/types';\r\n\r\n/**\r\n * WordPress Dependencies\r\n */\r\nimport { select } from '@wordpress/data';\r\n\r\n/**\r\n * External Dependencies\r\n */\r\nimport { mapValues, pickBy, find, size, forEach } from 'lodash';\r\n\r\n/**\r\n * Internal Dependencies\r\n */\r\nimport type { State } from './reducer';\r\nimport type { RendererAnswersState, Screen, SwiperState } from './types';\r\n\r\nexport const getBlocksRecursively = ( walkPath: FormBlocks ): FormBlocks => {\r\n\tconst allBlocks: FormBlocks = [];\r\n\tforEach( walkPath, ( block ) => {\r\n\t\tallBlocks.push( block );\r\n\r\n\t\tif ( block.name === 'group' && size( block.innerBlocks ) > 0 ) {\r\n\t\t\tforEach( block.innerBlocks, ( childBlock ) => {\r\n\t\t\t\tallBlocks.push( childBlock );\r\n\t\t\t} );\r\n\t\t}\r\n\t} );\r\n\treturn allBlocks;\r\n};\r\n/**\r\n * Get swiper state.\r\n *\r\n * @param {State} state Global application state.\r\n *\r\n * @return {Object} The swiper state\r\n */\r\nexport function getSwiperState( state: State ): SwiperState {\r\n\treturn state.swiper;\r\n}\r\n\r\n/**\r\n * Get walk path.\r\n *\r\n * @param {State} state Global application state.\r\n *\r\n * @return {Array} Walk path\r\n */\r\nexport function getWalkPath( state: State ): FormBlocks {\r\n\treturn state.swiper.walkPath;\r\n}\r\n\r\n/**\r\n * Is animating\r\n *\r\n * @param {State} state Global application state.\r\n *\r\n * @return {boolean} Is animating\r\n */\r\nexport function isAnimating( state: State ): boolean {\r\n\treturn state.swiper.isAnimating;\r\n}\r\n\r\n/**\r\n * Get correct incorrect display state\r\n * \r\n * @param {State} state Global application state.\r\n * \r\n * @return {boolean} Correct incorrect display state\r\n */\r\nexport function getCorrectIncorrectDisplay( state: State ): boolean {\r\n\treturn state.swiper.correctIncorrectDisplay;\r\n}\r\n\r\n\r\n/**\r\n * Get current block id.\r\n *\r\n * @param {State} state Global application state.\r\n *\r\n * @return {string}  Current block id\r\n */\r\nexport function getCurrentBlockId( state: State ): string | undefined {\r\n\treturn state.swiper.currentBlockId;\r\n}\r\n\r\n/**\r\n * Get welcome screens.\r\n *\r\n * @param {State} state Global application state.\r\n *\r\n * @return {Screen[]} Welcome screens\r\n */\r\nexport function getWelcomeScreens( state: State ): Screen[] {\r\n\treturn state.swiper.welcomeScreens;\r\n}\r\n\r\n/**\r\n * Get thank you screens.\r\n *\r\n * @param {State} state Global application state.\r\n *\r\n * @return {Screen[]} Thank you screens\r\n */\r\nexport function getThankYouScreens( state: State ): Screen[] {\r\n\treturn state.swiper.thankyouScreens;\r\n}\r\n\r\n/**\r\n * Get block by id\r\n *\r\n * @param {State}  state Global application state.\r\n * @param {string} id    The block id.\r\n *\r\n * @return {FormBlock } The block\r\n */\r\nexport function getBlockById(\r\n\tstate: State,\r\n\tid: string\r\n): FormBlock | undefined {\r\n\treturn state.swiper.walkPath.find( ( block ) => block.id === id );\r\n}\r\n\r\n/**\r\n * Is thankyou screen active.\r\n *\r\n * @param {State} state Global application state.\r\n *\r\n * @return {boolean} Is thankyou screen active\r\n */\r\nexport function isThankyouScreenActive( state: State ): boolean {\r\n\treturn state.swiper.isThankyouScreenActive;\r\n}\r\n\r\n/**\r\n * Is welcome screen active.\r\n *\r\n * @param {State} state Global application state.\r\n *\r\n * @return {boolean} Is welcome screen active\r\n */\r\nexport function isWelcomeScreenActive( state: State ): boolean {\r\n\treturn state.swiper.isWelcomeScreenActive;\r\n}\r\n\r\n/**\r\n * Is Current Block Safe to Swipe\r\n *\r\n * @param {State} state Global application state.\r\n *\r\n * @return {boolean} Is submitting\r\n */\r\nexport function isCurrentBlockSafeToSwipe( state: State ): boolean {\r\n\treturn state.swiper.isCurrentBlockSafeToSwipe;\r\n}\r\n\r\n/**\r\n * Is reviewing\r\n *\r\n * @param {State} state Global application state.\r\n *\r\n * @return {boolean} Is reviewing\r\n */\r\nexport function isReviewing( state: State ): boolean {\r\n\treturn state.submit.isReviewing;\r\n}\r\n\r\n/**\r\n * Is submitting\r\n *\r\n * @param {State} state Global application state.\r\n *\r\n * @return {boolean} Is submitting\r\n */\r\nexport function isSubmitting( state: State ): boolean {\r\n\treturn state.submit.isSubmitting;\r\n}\r\n\r\n/**\r\n * Get payment data.\r\n *\r\n * @param {State} state Global application state.\r\n *\r\n * @return {boolean} Is payment modal active\r\n */\r\nexport function getPaymentData( state: State ): boolean {\r\n\treturn state.submit.paymentData;\r\n}\r\n\r\n/**\r\n * Get block counter value\r\n *\r\n * @param {State}  state Global application state.\r\n * @param {string} id    Block id.\r\n *\r\n * @return {?number} The block counter value.\r\n */\r\nexport function getBlockCounterValue(\r\n\tstate: State,\r\n\tid: string\r\n): number | undefined {\r\n\tconst blocksWithCounter = getFieldsBySupportCriteria( state, [\r\n\t\t'editable',\r\n\t\t'innerBlocks',\r\n\t] );\r\n\tconst counterValue = blocksWithCounter.findIndex(\r\n\t\t( editableField ) => editableField.id === id\r\n\t);\r\n\tif ( counterValue === -1 ) return undefined;\r\n\treturn counterValue;\r\n}\r\n/**\r\n * Get current path editable fields\r\n *\r\n * @param {State} state Global application state.\r\n *\r\n * @return {Array} The editable fields in current path\r\n */\r\nexport const getEditableFieldsInCurrentPath = ( state: State ) => {\r\n\treturn state.swiper.walkPath.filter( ( block ) => {\r\n\t\treturn select( 'quillForms/blocks' ).hasBlockSupport(\r\n\t\t\tblock.name,\r\n\t\t\t'editable'\r\n\t\t);\r\n\t} );\r\n};\r\n\r\n/**\r\n *\r\n * Get Fields by support criteria\r\n *\r\n * @param {State} state           Global application state.\r\n * @param {Array} supportCriteria The block type support criteria.\r\n *\r\n * @return {Array} The  fields in current path with the support criteria passed.\r\n */\r\nexport const getFieldsBySupportCriteria = ( state: State, supportCriteria ) => {\r\n\tconst blockTypesSelector = select( 'quillForms/blocks' );\r\n\treturn state.swiper.walkPath.filter( ( block ) => {\r\n\t\tlet matched = false;\r\n\t\tsupportCriteria.forEach( ( feature ) => {\r\n\t\t\tif (\r\n\t\t\t\tblockTypesSelector.hasBlockSupport( block.name, feature ) ===\r\n\t\t\t\ttrue\r\n\t\t\t) {\r\n\t\t\t\tmatched = true;\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\treturn matched;\r\n\t} );\r\n};\r\n\r\n/**\r\n * Get all answers.\r\n *\r\n * @param {State} state Global application state.\r\n *\r\n * @return {RendererAnswersState} Answers\r\n */\r\nexport function getAnswers( state: State ): RendererAnswersState {\r\n\treturn state.answers;\r\n}\r\n\r\n/**\r\n * Get answers values.\r\n *\r\n * @param {RendererAnswersState} state Global application state.\r\n *\r\n * @return {Object} Answers values\r\n *\r\n */\r\nexport function getAnswersValues( state: State ): Record< string, unknown > {\r\n\treturn mapValues( state.answers, ( o ) => {\r\n\t\treturn o.value;\r\n\t} );\r\n}\r\n\r\n\r\n/**\r\n * Get count of answered fields.\r\n *\r\n * @param {State} state\r\n *\r\n * @return {number} Answered fields count\r\n */\r\nexport function getAnsweredFieldsLength( state: State ): number {\r\n\tconst answeredFields = pickBy(\r\n\t\tstate.answers,\r\n\t\t( value ) => value?.isAnswered === true\r\n\t);\r\n\treturn answeredFields ? size( answeredFields ) : 0;\r\n}\r\n\r\n/**\r\n * Get field answer value.\r\n *\r\n * @param {State}  state Global application state.\r\n * @param {string} id    Field id.\r\n *\r\n * @return {unknown} Field answer value\r\n */\r\nexport function getFieldAnswerVal( state: State, id: string ): unknown {\r\n\tconst answer = state.answers[ id ]?.value;\r\n\treturn answer;\r\n}\r\n\r\n/**\r\n * Get invalid fields\r\n *\r\n * @param {State} state\r\n *\r\n * @return {Partial< RendererAnswersState >} Invalid fields keyed by id\r\n */\r\nexport function getInvalidAnswers(\r\n\tstate: State\r\n): Partial< RendererAnswersState > {\r\n\tconst invalidFields = pickBy( state.answers, ( o ) => o.isValid === false );\r\n\treturn invalidFields;\r\n}\r\n\r\n/**\r\n * Get invalid fields length\r\n *\r\n * @param {State} state\r\n *\r\n * @return {number} Invalid fields length\r\n */\r\nexport function getInvalidFieldsLength( state: State ): number {\r\n\treturn size( getInvalidAnswers( state ) );\r\n}\r\n\r\n/**\r\n * Get first invalid field id\r\n *\r\n * @param {State} state\r\n *\r\n * @return {?string} First invalid field id\r\n */\r\nexport const getFirstInvalidFieldId = ( state: State ): string | undefined => {\r\n\tconst invalidFields = getInvalidAnswers( state );\r\n\tif ( size( invalidFields ) > 0 ) {\r\n\t\tconst invalidFieldsIds = Object.keys( invalidFields );\r\n\t\tconst walkPath = getBlocksRecursively( getWalkPath( state ) );\r\n\t\tconst firstField = find( walkPath, ( o ) =>\r\n\t\t\tinvalidFieldsIds.includes( o.id )\r\n\t\t);\r\n\t\tif ( firstField ) return firstField.id;\r\n\t}\r\n\treturn undefined;\r\n};\r\n\r\n/**\r\n * Is answered field.\r\n *\r\n * @param {State}  state Global application state.\r\n * @param {string} id    Field id.\r\n *\r\n * @return {boolean} showErr flag\r\n */\r\nexport function isAnsweredField( state: State, id: string ): boolean {\r\n\treturn state.answers[ id ]?.isAnswered === true;\r\n}\r\n\r\n/**\r\n * Is valid field.\r\n *\r\n * @param {State}  state Global application state.\r\n * @param {string} id    Field id.\r\n *\r\n * @return {boolean} showErr flag\r\n */\r\nexport function isValidField( state: State, id: string ): boolean {\r\n\treturn state.answers[ id ]?.isValid;\r\n}\r\n\r\n/**\r\n * Has valid fields.\r\n * This for blocks that support inner blocks like group.\r\n *\r\n * @param {State}  state Global application state.\r\n * @param {string} id    Field id.\r\n *\r\n * @return {boolean} showErr flag\r\n */\r\nexport function hasValidFields( state: State, id: string ): boolean {\r\n\tconst block = getBlockById( state, id );\r\n\tif ( ! block ) return false;\r\n\tlet isValid = true;\r\n\tif ( size( block?.innerBlocks ) > 0 ) {\r\n\t\tforEach( block.innerBlocks, ( $block ) => {\r\n\t\t\tconst $blockId = $block.id;\r\n\t\t\tif ( ! state.answers?.[ $blockId ]?.isValid ) {\r\n\t\t\t\tisValid = false;\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n\treturn isValid;\r\n}\r\n\r\n/**\r\n * Is field answer correct\r\n * @param state \r\n * @param id \r\n */\r\nexport function isFieldAnswerCorrect(state: State, id:string): boolean | undefined {\r\n\treturn state.answers[ id ]?.isCorrect;\r\n}\r\n\r\n\r\n/**\r\n * Is field answer locked\r\n * \r\n * @param state\r\n * @param id\r\n */\r\nexport function isFieldAnswerLocked(state: State, id:string): boolean | undefined {\r\n\treturn state.answers[ id ]?.isLocked;\r\n}\r\n\r\n/**\r\n * Is field Correct Incorrect Screen Displayed\r\n * \r\n * @param state\r\n * @param id\r\n */\r\nexport function isFieldCorrectIncorrectScreenDisplayed(state: State, id:string): boolean | undefined {\r\n\treturn state.answers[ id ]?.isCorrectIncorrectScreenDisplayed;\r\n}\r\n\r\n/**\r\n * Is field pending.\r\n *\r\n * @param {State}  state Global application state.\r\n * @param {string} id    Field id.\r\n *\r\n * @return {boolean} isPending flag.\r\n */\r\nexport function isFieldPending( state: State, id: string ): boolean {\r\n\treturn state.answers[ id ]?.isPending;\r\n}\r\n\r\n/**\r\n * Get pending message if pending.\r\n *\r\n * @param {State}  state Global application state.\r\n * @param {string} id    Field id.\r\n *\r\n * @return {string|false} Pending message if pending, or false.\r\n */\r\nexport function getPendingMsg( state: State ): string | false {\r\n\tfor ( const answer of Object.values( state.answers ) ) {\r\n\t\tif ( answer?.isPending ) return answer.pendingMsg ?? '';\r\n\t}\r\n\treturn false;\r\n}\r\n\r\n/**\r\n * Get field validation error message.\r\n *\r\n * @param {State}  state Global application state.\r\n * @param {string} id    Field id.\r\n *\r\n * @return {string} Field validation error message\r\n */\r\nexport function getFieldValidationErr( state: State, id: string ): string | [] {\r\n\tconst validationErr = state.answers[ id ]?.validationErr;\r\n\treturn validationErr ? validationErr : [];\r\n}\r\n\r\n/**\r\n * Get is focused flag\r\n *\r\n * @param {State} state Global application state.\r\n *\r\n * @return {boolean} isFocused flag\r\n */\r\nexport function isFocused( state: State ): boolean {\r\n\treturn state.isFocused;\r\n}\r\n\r\n/**\r\n * Should footer be displayed flag\r\n *\r\n * @param {State} state Global application state.\r\n *\r\n * @return {boolean} isFocused flag\r\n */\r\nexport function shouldFooterBeDisplayed( state: State ): boolean {\r\n\treturn state.footerDisplay;\r\n}\r\n\r\n/**\r\n * Get submission error message\r\n *\r\n * @param {State} state Global application state.\r\n *\r\n * @return {string} submission error message\r\n */\r\nexport function getSubmissionErr( state: State ): string {\r\n\treturn state.submit.submissionErr;\r\n}\r\n\r\n/**\r\n * Get correct answers count\r\n * \r\n * @param {State} state Global application state.\r\n * \r\n * @return {number} correct answers count\r\n */\r\nexport function getCorrectAnswersCount( state: State ): number {\r\n\t// access answers object and filter correct answers\r\n\treturn Object.values( state.answers ).filter( ( answer ) => answer.isCorrect === true ).length;\r\n} \r\n\r\n\r\n/**\r\n * Get incorrect answers count\r\n * \r\n * @param {State} state Global application state.\r\n * \r\n * @return {number} incorrect answers count\r\n */\r\nexport function getIncorrectAnswersCount( state: State ): number {\r\n\t// access answers object and filter incorrect answers\r\n\treturn Object.values( state.answers ).filter( ( answer ) => answer.isCorrect === false ).length;\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,IAAAA,KAAA,GAAAC,OAAA;AAKA,IAAAC,OAAA,GAAAD,OAAA;AAbA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;;AASO,MAAME,oBAAoB,GAAKC,QAAoB,IAAkB;EAC3E,MAAMC,SAAqB,GAAG,EAAE;EAChC,IAAAC,eAAO,EAAEF,QAAQ,EAAIG,KAAK,IAAM;IAC/BF,SAAS,CAACG,IAAI,CAAED,KAAM,CAAC;IAEvB,IAAKA,KAAK,CAACE,IAAI,KAAK,OAAO,IAAI,IAAAC,YAAI,EAAEH,KAAK,CAACI,WAAY,CAAC,GAAG,CAAC,EAAG;MAC9D,IAAAL,eAAO,EAAEC,KAAK,CAACI,WAAW,EAAIC,UAAU,IAAM;QAC7CP,SAAS,CAACG,IAAI,CAAEI,UAAW,CAAC;MAC7B,CAAE,CAAC;IACJ;EACD,CAAE,CAAC;EACH,OAAOP,SAAS;AACjB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AANAQ,OAAA,CAAAV,oBAAA,GAAAA,oBAAA;AAOO,SAASW,cAAcA,CAAEC,KAAY,EAAgB;EAC3D,OAAOA,KAAK,CAACC,MAAM;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,WAAWA,CAAEF,KAAY,EAAe;EACvD,OAAOA,KAAK,CAACC,MAAM,CAACZ,QAAQ;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASc,WAAWA,CAAEH,KAAY,EAAY;EACpD,OAAOA,KAAK,CAACC,MAAM,CAACE,WAAW;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,0BAA0BA,CAAEJ,KAAY,EAAY;EACnE,OAAOA,KAAK,CAACC,MAAM,CAACI,uBAAuB;AAC5C;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,iBAAiBA,CAAEN,KAAY,EAAuB;EACrE,OAAOA,KAAK,CAACC,MAAM,CAACM,cAAc;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,iBAAiBA,CAAER,KAAY,EAAa;EAC3D,OAAOA,KAAK,CAACC,MAAM,CAACQ,cAAc;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,kBAAkBA,CAAEV,KAAY,EAAa;EAC5D,OAAOA,KAAK,CAACC,MAAM,CAACU,eAAe;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,YAAYA,CAC3BZ,KAAY,EACZa,EAAU,EACc;EACxB,OAAOb,KAAK,CAACC,MAAM,CAACZ,QAAQ,CAACyB,IAAI,CAAItB,KAAK,IAAMA,KAAK,CAACqB,EAAE,KAAKA,EAAG,CAAC;AAClE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASE,sBAAsBA,CAAEf,KAAY,EAAY;EAC/D,OAAOA,KAAK,CAACC,MAAM,CAACc,sBAAsB;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,qBAAqBA,CAAEhB,KAAY,EAAY;EAC9D,OAAOA,KAAK,CAACC,MAAM,CAACe,qBAAqB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,yBAAyBA,CAAEjB,KAAY,EAAY;EAClE,OAAOA,KAAK,CAACC,MAAM,CAACgB,yBAAyB;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,WAAWA,CAAElB,KAAY,EAAY;EACpD,OAAOA,KAAK,CAACmB,MAAM,CAACD,WAAW;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASE,YAAYA,CAAEpB,KAAY,EAAY;EACrD,OAAOA,KAAK,CAACmB,MAAM,CAACC,YAAY;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,cAAcA,CAAErB,KAAY,EAAY;EACvD,OAAOA,KAAK,CAACmB,MAAM,CAACG,WAAW;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,oBAAoBA,CACnCvB,KAAY,EACZa,EAAU,EACW;EACrB,MAAMW,iBAAiB,GAAGC,0BAA0B,CA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","ignoreList":[]}