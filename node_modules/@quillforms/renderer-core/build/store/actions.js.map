{"version":3,"names":["_constants","require","setSwiper","swiperState","type","SET_SWIPER_STATE","exports","goNext","isSwiping","GO_NEXT","goPrev","GO_PREV","goToBlock","id","forceUpdateState","GO_TO_BLOCK","completeForm","COMPLETE_FORM","resetAnswers","RESET_ANSWERS","insertEmptyFieldAnswer","blockName","INSERT_EMPTY_FIELD_ANSWER","setFieldAnswer","val","SET_FIELD_ANSWER","setIsFieldValid","SET_IS_FIELD_VALID","setIsFieldAnswered","SET_IS_FIELD_ANSWERED","setIsFieldPending","SET_IS_FIELD_PENDING","setFieldPendingMsg","SET_FIELD_PENDING_MSG","setFieldValidationErr","SET_FIELD_VALIDATION_ERR","setIsReviewing","SET_IS_REVIEWING","setIsSubmitting","SET_IS_SUBMITTING","setSubmissionErr","SET_SUBMISSION_ERR","setPaymentData","data","SET_PAYMENT_DATA","setIsFocused","SET_IS_FOCUSED","setFooterDisplay","SET_FOOTER_DISPLAY","setIsCurrentBlockSafeToSwipe","SET_IS_CURRENT_BLOCK_SAFE_TO_SWIPE","setIsFieldAnswerCorrect","SET_IS_FIELD_ANSWER_CORRECT","setIsFieldAnswerLocked","SET_IS_FIELD_ANSWER_LOCKED","setIsFieldCorrectIncorrectScreenDisplayed","SET_IS_FIELD_CORRECT_INCORRECT_SCREEN_DISPLAYED","setCorrectIncorrectDisplay","SET_CORRECT_INCORRECT_DISPLAY","setThankyouScreens","screens","SET_THANKYOU_SCREENS"],"sources":["@quillforms/renderer-core/src/store/actions.ts"],"sourcesContent":["import { Screen } from './types';\r\nimport {\r\n\tSET_SWIPER_STATE,\r\n\tGO_NEXT,\r\n\tGO_PREV,\r\n\tCOMPLETE_FORM,\r\n\tGO_TO_BLOCK,\r\n\tSET_SUBMISSION_ERR,\r\n\tSET_IS_REVIEWING,\r\n\tSET_IS_SUBMITTING,\r\n\tSET_PAYMENT_DATA,\r\n\tSET_FIELD_ANSWER,\r\n\tSET_IS_FIELD_ANSWERED,\r\n\tSET_IS_FIELD_PENDING,\r\n\tSET_FIELD_PENDING_MSG,\r\n\tSET_IS_FIELD_VALID,\r\n\tINSERT_EMPTY_FIELD_ANSWER,\r\n\tSET_FIELD_VALIDATION_ERR,\r\n\tSET_CORRECT_INCORRECT_DISPLAY,\r\n\tSET_IS_FIELD_ANSWER_LOCKED,\r\n\tSET_IS_FIELD_CORRECT_INCORRECT_SCREEN_DISPLAYED,\r\n\tRESET_ANSWERS,\r\n\tSET_IS_FOCUSED,\r\n\tSET_FOOTER_DISPLAY,\r\n\tSET_IS_FIELD_ANSWER_CORRECT,\r\n\tSET_THANKYOU_SCREENS,\r\n\tSET_IS_CURRENT_BLOCK_SAFE_TO_SWIPE\r\n} from './constants';\r\n\r\nimport type {\r\n\tSwiperState,\r\n\tSwiperActionTypes,\r\n\tRendererAnswersActionTypes,\r\n\tSubmitActionTypes,\r\n} from './types';\r\n\r\n/**\r\n \r\n * Returns an action object used in setting swiper state\r\n *\r\n * @param {SwiperState} swiperState New swiper state.\r\n *\r\n * @return {SwiperActionTypes} Action object.\r\n */\r\nexport const setSwiper = (\r\n\tswiperState: Partial<SwiperState>\r\n): SwiperActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_SWIPER_STATE,\r\n\t\tswiperState,\r\n\t};\r\n};\r\n\r\n/**\r\n * Go to next block\r\n *\r\n * @param {boolean} isSwiping Is swiping\r\n *\r\n * @return {SwiperActionTypes} Action object.\r\n */\r\nexport const goNext = (isSwiping: boolean = false): SwiperActionTypes => {\r\n\treturn {\r\n\t\ttype: GO_NEXT,\r\n\t\tisSwiping,\r\n\t};\r\n};\r\n\r\n/**\r\n * Go to previous block\r\n *\r\n * @return {SwiperActionTypes} Action object.\r\n */\r\nexport const goPrev = (): SwiperActionTypes => {\r\n\treturn {\r\n\t\ttype: GO_PREV,\r\n\t};\r\n};\r\n\r\n/**\r\n * Go to a specific field\r\n *\r\n * @param {string} id               The field id.\r\n *\r\n * @param          forceUpdateState\r\n * @return {SwiperActionTypes} Action object.\r\n */\r\nexport const goToBlock = (\r\n\tid: string,\r\n\tforceUpdateState = false\r\n): SwiperActionTypes => {\r\n\treturn {\r\n\t\ttype: GO_TO_BLOCK,\r\n\t\tid,\r\n\t\tforceUpdateState,\r\n\t};\r\n};\r\n\r\n/**\r\n * Complete form and show thank you screen\r\n *\r\n * @return {SwiperActionTypes} Action object\r\n */\r\nexport const completeForm = (): SwiperActionTypes => {\r\n\treturn {\r\n\t\ttype: COMPLETE_FORM,\r\n\t};\r\n};\r\n\r\n/**\r\n * Reset answers\r\n *\r\n * @return {RendererAnswersActionTypes} Action object.\r\n */\r\nexport const resetAnswers = (): RendererAnswersActionTypes => {\r\n\treturn {\r\n\t\ttype: RESET_ANSWERS,\r\n\t};\r\n};\r\n/**\r\n * Returns an action object used in inserting empty field answer.\r\n *\r\n * @param {string} id        Field uuid.\r\n * @param {string} type      Field type\r\n *\r\n * @param          blockName\r\n * @return {RendererAnswersActionTypes} Action object.\r\n */\r\nexport const insertEmptyFieldAnswer = (\r\n\tid: string,\r\n\tblockName: string\r\n): RendererAnswersActionTypes => {\r\n\treturn {\r\n\t\ttype: INSERT_EMPTY_FIELD_ANSWER,\r\n\t\tid,\r\n\t\tblockName,\r\n\t};\r\n};\r\n\r\n/**\r\n * Returns an action object used in setting field answer.\r\n *\r\n * @param {string}  id  Field uuid.\r\n * @param {unknown} val Field value could be string, array, number or any type.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport const setFieldAnswer = (\r\n\tid: string,\r\n\tval: unknown\r\n): RendererAnswersActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_FIELD_ANSWER,\r\n\t\tid,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Returns an action object used in setting field valid flag.\r\n *\r\n * @param {string}  id  Field uuid.\r\n * @param {boolean} val Field isValid flag.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport const setIsFieldValid = (\r\n\tid: string,\r\n\tval: boolean\r\n): RendererAnswersActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_IS_FIELD_VALID,\r\n\t\tid,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Returns an action object used in setting fields answered flag.\r\n *\r\n * @param {string}  id  Field uuid.\r\n * @param {boolean} val Field isAnswered flag.\r\n *\r\n * @return {RendererAnswersActionTypes} Action object.\r\n */\r\nexport const setIsFieldAnswered = (\r\n\tid: string,\r\n\tval: boolean\r\n): RendererAnswersActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_IS_FIELD_ANSWERED,\r\n\t\tid,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Returns an action object used in setting fields pending flag.\r\n *\r\n * @param {string}  id  Field uuid.\r\n * @param {boolean} val Field isPending flag.\r\n *\r\n * @return {RendererAnswersActionTypes} Action object.\r\n */\r\nexport const setIsFieldPending = (\r\n\tid: string,\r\n\tval: boolean\r\n): RendererAnswersActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_IS_FIELD_PENDING,\r\n\t\tid,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Returns and object used in setting pending message key\r\n *\r\n * @param {string} id  Field uuid.\r\n * @param {string} val Field pendingMsg flag.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport const setFieldPendingMsg = (\r\n\tid: string,\r\n\tval: string\r\n): RendererAnswersActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_FIELD_PENDING_MSG,\r\n\t\tid,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Returns and object used in setting error message key\r\n *\r\n * @param {string} id  Field uuid.\r\n * @param {string} val Field isAnswered flag.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport const setFieldValidationErr = (\r\n\tid: string,\r\n\tval: string\r\n): RendererAnswersActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_FIELD_VALIDATION_ERR,\r\n\t\tid,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Set is reviewing flag\r\n *\r\n * @param {boolean} val The new flag value.\r\n *\r\n * @return {Object} Action object\r\n */\r\nexport const setIsReviewing = (val: boolean): SubmitActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_IS_REVIEWING,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Set is submitting flag.\r\n *\r\n * @param {boolean} val The new flag value.\r\n *\r\n * @return {Object} Action object\r\n */\r\nexport const setIsSubmitting = (val: boolean): SubmitActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_IS_SUBMITTING,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Set submission errors.\r\n *\r\n * @param {string} val The new submission errors.\r\n *\r\n * @return {Object} Action object\r\n */\r\nexport const setSubmissionErr = (val: string): SubmitActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_SUBMISSION_ERR,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Set payment data\r\n *\r\n * @param  data\r\n * @return {SwiperActionTypes} Action object\r\n */\r\nexport const setPaymentData = (data: any): SubmitActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_PAYMENT_DATA,\r\n\t\tdata,\r\n\t};\r\n};\r\n\r\n/**\r\n * Set isFocused flag\r\n *\r\n * @param {boolean} val The new flag value.\r\n *\r\n * @return {Object} Action object\r\n */\r\nexport const setIsFocused = (val: boolean) => {\r\n\treturn {\r\n\t\ttype: SET_IS_FOCUSED,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Set footerDisplay flag\r\n * This flag will alomst be needed to control in touch screens.\r\n *\r\n * @param {boolean} val The new flag value.\r\n *\r\n * @return {Object} Action object\r\n */\r\nexport const setFooterDisplay = (val: boolean) => {\r\n\treturn {\r\n\t\ttype: SET_FOOTER_DISPLAY,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Set isCurrentBlockSafeToSwipe flag\r\n * This flag should control going to the next block.\r\n *\r\n * @param {boolean} val The new flag value.\r\n *\r\n * @return {Object} Action object\r\n */\r\nexport const setIsCurrentBlockSafeToSwipe = (val: boolean) => {\r\n\treturn {\r\n\t\ttype: SET_IS_CURRENT_BLOCK_SAFE_TO_SWIPE,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n\r\n/**\r\n * Set Is Field Answer Correct\r\n * \r\n * \r\n * @param {string} id  Field uid.\r\n * @param {boolean} val Field isCorrect flag.\r\n */\r\nexport const setIsFieldAnswerCorrect = (\r\n\tid: string,\r\n\tval: boolean\r\n): RendererAnswersActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_IS_FIELD_ANSWER_CORRECT,\r\n\t\tid,\r\n\t\tval,\r\n\t};\r\n}\r\n\r\n/**\r\n * Set Is answer locked\r\n * @param {string} id  Field uid.\r\n * @param {boolean} val Field isCorrect flag.\r\n */\r\nexport const setIsFieldAnswerLocked = (\r\n\tid: string,\r\n\tval: boolean\r\n): RendererAnswersActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_IS_FIELD_ANSWER_LOCKED,\r\n\t\tid,\r\n\t\tval,\r\n\t}\r\n}\r\n\r\n/**\r\n * Set Is Field correct incorrect screen displayed\r\n * @param val \r\n * @returns \r\n */\r\nexport const setIsFieldCorrectIncorrectScreenDisplayed = (\r\n\tid: string,\r\n\tval: boolean\r\n): RendererAnswersActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_IS_FIELD_CORRECT_INCORRECT_SCREEN_DISPLAYED,\r\n\t\tid,\r\n\t\tval,\r\n\t}\r\n}\r\n\r\n\r\nexport const setCorrectIncorrectDisplay = (\r\n\tval: boolean\r\n): SwiperActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_CORRECT_INCORRECT_DISPLAY,\r\n\t\tval,\r\n\t};\r\n}\r\n\r\nexport const setThankyouScreens = (\r\n\tscreens: Screen[]\r\n): SwiperActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_THANKYOU_SCREENS,\r\n\t\tscreens,\r\n\t};\r\n}"],"mappings":"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","ignoreList":[]}