"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _data = require("@wordpress/data");
var _emotion = require("emotion");
var _classnames = _interopRequireDefault(require("classnames"));
var _arrowIcon = _interopRequireDefault(require("./arrow-icon"));
var _useBlockTheme = _interopRequireDefault(require("../../hooks/use-block-theme"));
/**
 * WordPress Dependencies
 */

/**
 * External Dependencies
 */

/**
 * Internal Dependencies
 */

const BlockCounter = ({
  blockType,
  attributes,
  id
}) => {
  const theme = (0, _useBlockTheme.default)(attributes?.themeId);
  const {
    counter
  } = (0, _data.useSelect)(select => {
    return {
      counter: select('quillForms/renderer-core').getBlockCounterValue(id)
    };
  });
  return (0, _react.createElement)("div", {
    className: (0, _classnames.default)('renderer-components-block-counter', (0, _emotion.css)`
					color: ${theme.questionsColor};
					font-family: ${theme.questionsLabelFont};
					@media ( min-width: 768px ) {
						line-height: ${theme.questionsLabelLineHeight.lg} !important;
					}
					@media ( max-width: 767px ) {
						line-height: ${theme.questionsLabelLineHeight.sm} !important;
					}
				`)
  }, counter !== undefined && (0, _react.createElement)("span", {
    className: "renderer-components-block-counter__value"
  }, counter + 1), (0, _react.createElement)("span", {
    className: "renderer-components-block-counter__content"
  }, blockType?.counterIcon ? (0, _react.createElement)(blockType.counterIcon, null) : (0, _react.createElement)(_arrowIcon.default, {
    theme: theme
  })));
};
var _default = exports.default = BlockCounter;
//# sourceMappingURL=index.js.map