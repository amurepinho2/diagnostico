"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _data = require("@wordpress/data");
var _defaultMergeTag = _interopRequireDefault(require("./default-merge-tag"));
/* eslint-disable @wordpress/no-unused-vars-before-return */
/* eslint-disable no-nested-ternary */

/**
 * Internal Dependencies
 */

const FieldMergeTag = ({
  modifier
}) => {
  const {
    fieldMergeTagValue
  } = (0, _data.useSelect)(select => {
    const fieldVal = select('quillForms/renderer-core').getFieldAnswerVal(modifier);
    const blockTypes = select('quillForms/blocks').getBlockTypes();
    const walkPath = select('quillForms/renderer-core').getWalkPath();
    const allBlocks = [];
    walkPath.forEach(block => {
      if (block?.innerBlocks) {
        block.innerBlocks.forEach(innerBlock => {
          allBlocks.push(innerBlock);
        });
      } else {
        allBlocks.push(block);
      }
    });
    const block = allBlocks.find(a => a.id === modifier);
    if (!block) return {
      fieldMergeTagValue: null
    };
    const blockType = blockTypes[block.name];
    return {
      fieldMergeTagValue: blockType ? blockType?.mergeTag && fieldVal ?
      // @ts-expect-error
      (0, _react.createElement)(blockType.mergeTag, {
        fieldId: modifier,
        val: fieldVal,
        attributes: block.attributes
      }) : (0, _react.createElement)(_defaultMergeTag.default, {
        val: fieldVal
      }) : null
    };
  }, []);
  return (0, _react.createElement)(_react.Fragment, null, fieldMergeTagValue);
};
var _default = exports.default = FieldMergeTag;
//# sourceMappingURL=field.js.map