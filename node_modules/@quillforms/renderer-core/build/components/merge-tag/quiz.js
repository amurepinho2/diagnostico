"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _useCorrectAnswersCount = _interopRequireDefault(require("../../hooks/use-correct-answers-count"));
var _useIncorrectAnswersCount = _interopRequireDefault(require("../../hooks/use-incorrect-answers-count"));
var _data = require("@wordpress/data");
var _htmlParser = _interopRequireDefault(require("../html-parser"));
var _hooks = require("../../hooks");
var _emotion = require("emotion");
var _fieldRender = require("../field-render");
/**
 * Internal Dependencies
 */

/**
 * WordPress Dependencies
 */

/**
 * External Dependencies
 */

/**
 * Internal Dependencies
 */

const QuizMergeTag = ({
  modifier
}) => {
  const correctIncorrectQuiz = (0, _hooks.useCorrectIncorrectQuiz)();
  const {
    attributes
  } = (0, _fieldRender.__experimentalUseFieldRenderContext)();
  const theme = (0, _hooks.useBlockTheme)(attributes?.themeId);
  const messages = (0, _hooks.useMessages)();
  const {
    fieldsSupportQuiz,
    answers
  } = (0, _data.useSelect)(select => {
    const {
      getFieldsBySupportCriteria
    } = select('quillForms/renderer-core');
    return {
      fieldsSupportQuiz: getFieldsBySupportCriteria(['correctAnswers']),
      answers: select('quillForms/renderer-core')?.getAnswers()
    };
  });
  const correctAnswersCount = (0, _useCorrectAnswersCount.default)();
  const inCorrectAnswersCount = (0, _useIncorrectAnswersCount.default)();
  if (modifier === 'correct_answers_count') {
    return (0, _react.createElement)(_react.Fragment, null, correctAnswersCount);
  } else if (modifier === 'incorrect_answers_count') {
    return (0, _react.createElement)(_react.Fragment, null, inCorrectAnswersCount);
  } else if (modifier === 'summary') {
    return (0, _react.createElement)("div", null, fieldsSupportQuiz.map((field, index) => {
      // first div add dangerouslySetInnerHTML
      return (0, _react.createElement)("div", {
        className: (0, _emotion.css)`
							font-size: ${theme.fontSize.lg};
							@media screen and (max-width: 768px) {
								font-size: ${theme.fontSize.sm}
							}
							margin-bottom: 14px;
						`
      }, (0, _react.createElement)("div", {
        dangerouslySetInnerHTML: {
          __html: index + 1 + "- " + field.attributes?.label?.replace(/{{([a-zA-Z0-9-_]+):([a-zA-Z0-9-_]+)}}/g, (_match, p1, p2) => {
            return `______`;
          })
        }
      }), (0, _react.createElement)("div", null, messages['label.yourAnswer'], ": ", (0, _react.createElement)(_htmlParser.default, {
        value: `{{field:${field.id}}}`
      })), (0, _react.createElement)("div", {
        className: (0, _emotion.css)`
								margin-top:8px;
								color: #fff;
								background: ${answers[field.id]?.isCorrect ? '#5bc68a' : '#d93148'};
								padding: 5px 8px;
								display: inline-flex;
							`
      }, answers[field.id]?.isCorrect ? messages['label.correct'] : messages['label.incorrect']));
    }));
  }
  return null;
};
var _default = exports.default = QuizMergeTag;
//# sourceMappingURL=quiz.js.map