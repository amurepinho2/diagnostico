/**
 * QuillForms dependencies
 */
import type { BlockAttributes, FormBlocks } from '@quillforms/types';
interface FieldRenderContext {
    id: string | undefined;
    blockName: string | undefined;
    attributes: BlockAttributes | undefined;
    shouldBeRendered: boolean;
    isActive: boolean;
    innerBlocks?: FormBlocks;
    isSubmitBtnVisible: boolean;
    isErrMsgVisible: boolean;
    showNextBtn: (x: boolean) => void;
    showErrMsg: (x: boolean) => void;
    next: () => void;
    isLastField: boolean;
}
export declare const FieldRenderContextProvider: ({ value, children }: {
    value: any;
    children: any;
}) => JSX.Element;
/**
 * A hook that returns the block render context.
 *
 * @return {Object} Block render context
 */
export declare function __experimentalUseFieldRenderContext(): FieldRenderContext;
export {};
//# sourceMappingURL=context.d.ts.map