import type { FormObj, SubmissionDispatchers, CustomFont } from '../../types';
interface Props {
    formId?: number;
    formObj: FormObj;
    customFonts?: CustomFont[];
    onSubmit: (data: Object, dispatchers: SubmissionDispatchers) => void;
    beforeGoingNext?: ({ setIsFieldValid, setIsPending, currentBlockId, answers, setFieldValidationErr, setIsCurrentBlockSafeToSwipe, goToBlock, goNext, }: {
        setIsFieldValid: (id: string, flag: boolean) => void;
        setFieldValidationErr: (id: string, err: string) => void;
        setIsPending: (flag: boolean) => void;
        setIsCurrentBlockSafeToSwipe: (flag: boolean) => void;
        goToBlock: (id: string) => void;
        goNext: () => void;
        currentBlockId: string;
        answers: Record<string, unknown>;
    }) => void;
    applyLogic: boolean;
    isPreview?: boolean;
}
declare const Form: React.FC<Props>;
export default Form;
//# sourceMappingURL=index.d.ts.map