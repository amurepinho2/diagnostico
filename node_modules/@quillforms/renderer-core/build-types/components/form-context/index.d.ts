import { FormObj, CustomFont, SubmissionDispatchers } from '../../types';
interface FormContext {
    formObj: FormObj;
    onSubmit: (data: object, dispatchers: SubmissionDispatchers) => void;
    isPreview: boolean;
    deviceWidth?: string;
    customFonts?: CustomFont[];
    formId?: number;
    beforeGoingNext?: ({ setIsFieldValid, setIsPending, currentBlockId, answers, setFieldValidationErr, setIsCurrentBlockSafeToSwipe, goToBlock, goNext, }: {
        setIsFieldValid: (id: string, flag: boolean) => void;
        setFieldValidationErr: (id: string, err: string) => void;
        setIsPending: (flag: boolean) => void;
        setIsCurrentBlockSafeToSwipe: (flag: boolean) => void;
        goToBlock: (id: string) => void;
        goNext: () => void;
        currentBlockId: string;
        answers: Record<string, unknown>;
    }) => void;
}
declare const FormContext: React.Context<FormContext>;
declare const FormContextProvider: ({ children, value }: {
    children: any;
    value: any;
}) => JSX.Element;
export { FormContext, FormContextProvider };
//# sourceMappingURL=index.d.ts.map