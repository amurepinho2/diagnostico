import { createElement, Fragment } from "react";
/**
 * WordPress Dependencies
 */
import { useSelect } from '@wordpress/data';
import { useEffect } from '@wordpress/element';
/**
 * Internal Dependencies
 */
import FieldAction from '../field-action';
import { __experimentalUseFieldRenderContext } from '../field-render';
import SubmitBtn from '../submit-btn';
const ParentBlockFooter = () => {
  const {
    id,
    next,
    isLastField,
    showErrMsg,
    isErrMsgVisible
  } = __experimentalUseFieldRenderContext();
  if (!id) return null;
  const {
    isValid,
    isReviewing
  } = useSelect(select => {
    return {
      isValid: select('quillForms/renderer-core').hasValidFields(id),
      isReviewing: select('quillForms/renderer-core').isReviewing()
    };
  });
  useEffect(() => {
    if (isValid) {
      showErrMsg(false);
    }
    if (!isValid && isReviewing) {
      showErrMsg(true);
    }
  }, [isReviewing, isValid]);
  return createElement("div", {
    className: "renderer-components-block-footer"
  }, isLastField ? createElement(SubmitBtn, null) : createElement(Fragment, null, !isErrMsgVisible && createElement(FieldAction, {
    show: true,
    clickHandler: () => {
      if (!isValid) {
        showErrMsg(true);
      } else {
        next();
      }
    }
  })));
};
export default ParentBlockFooter;
//# sourceMappingURL=parent.js.map