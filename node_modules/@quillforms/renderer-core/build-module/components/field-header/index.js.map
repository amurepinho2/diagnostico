{"version":3,"names":["memo","BlockCounter","BlockTitle","BlockDescription","BlockAttachment","BlockCustomHTML","__experimentalUseFieldRenderContext","useBlockTypes","useFormContext","useFormSettings","QuestionHeader","_useFormSettings$show","_attributes$layout","blockName","id","attributes","deviceWidth","blockTypes","showQuestionsNumbers","blockType","layout","createElement","className","counterIcon"],"sources":["@quillforms/renderer-core/src/components/field-header/index.tsx"],"sourcesContent":["/**\r\n * WordPresss Dependencies\r\n */\r\nimport { memo } from '@wordpress/element';\r\n/**\r\n * Internal Dependencies\r\n */\r\nimport BlockCounter from '../field-counter';\r\nimport BlockTitle from '../field-label';\r\nimport BlockDescription from '../field-description';\r\nimport BlockAttachment from '../field-attachment';\r\nimport BlockCustomHTML from '../field-custom-html';\r\nimport { __experimentalUseFieldRenderContext } from '../field-render';\r\nimport { useBlockTypes, useFormContext, useFormSettings } from '../../hooks';\r\n\r\nconst QuestionHeader: React.FC = memo( () => {\r\n\tconst { blockName, id, attributes } = __experimentalUseFieldRenderContext();\r\n\tconst { deviceWidth } = useFormContext();\r\n\tconst blockTypes = useBlockTypes();\r\n\tconst showQuestionsNumbers =\r\n\t\tuseFormSettings()?.showQuestionsNumbers ?? true;\r\n\r\n\tif ( ! blockName || ! id ) return null;\r\n\r\n\tconst blockType = blockTypes[ blockName ];\r\n\r\n\tconst layout = attributes?.layout ?? 'stack';\r\n\treturn (\r\n\t\t<div className=\"renderer-components-question-header\">\r\n\t\t\t{ ( showQuestionsNumbers || blockType?.counterIcon ) && (\r\n\t\t\t\t<BlockCounter\r\n\t\t\t\t\tid={ id }\r\n\t\t\t\t\tattributes={ attributes }\r\n\t\t\t\t\tblockType={ blockType }\r\n\t\t\t\t/>\r\n\t\t\t) }\r\n\t\t\t<BlockTitle />\r\n\t\t\t<BlockDescription />\r\n\t\t\t{ ( layout === 'stack' ||\r\n\t\t\t\t( deviceWidth === 'mobile' &&\r\n\t\t\t\t\t( layout === 'float-left' ||\r\n\t\t\t\t\t\tlayout === 'float-right' ) ) ) && <BlockAttachment /> }\r\n\t\t\t<BlockCustomHTML />\r\n\t\t</div>\r\n\t);\r\n} );\r\n\r\nexport default QuestionHeader;\r\n"],"mappings":";AAAA;AACA;AACA;AACA,SAASA,IAAI,QAAQ,oBAAoB;AACzC;AACA;AACA;AACA,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,UAAU,MAAM,gBAAgB;AACvC,OAAOC,gBAAgB,MAAM,sBAAsB;AACnD,OAAOC,eAAe,MAAM,qBAAqB;AACjD,OAAOC,eAAe,MAAM,sBAAsB;AAClD,SAASC,mCAAmC,QAAQ,iBAAiB;AACrE,SAASC,aAAa,EAAEC,cAAc,EAAEC,eAAe,QAAQ,aAAa;AAE5E,MAAMC,cAAwB,GAAGV,IAAI,CAAE,MAAM;EAAA,IAAAW,qBAAA,EAAAC,kBAAA;EAC5C,MAAM;IAAEC,SAAS;IAAEC,EAAE;IAAEC;EAAW,CAAC,GAAGT,mCAAmC,CAAC,CAAC;EAC3E,MAAM;IAAEU;EAAY,CAAC,GAAGR,cAAc,CAAC,CAAC;EACxC,MAAMS,UAAU,GAAGV,aAAa,CAAC,CAAC;EAClC,MAAMW,oBAAoB,IAAAP,qBAAA,GACzBF,eAAe,CAAC,CAAC,EAAES,oBAAoB,cAAAP,qBAAA,cAAAA,qBAAA,GAAI,IAAI;EAEhD,IAAK,CAAEE,SAAS,IAAI,CAAEC,EAAE,EAAG,OAAO,IAAI;EAEtC,MAAMK,SAAS,GAAGF,UAAU,CAAEJ,SAAS,CAAE;EAEzC,MAAMO,MAAM,IAAAR,kBAAA,GAAGG,UAAU,EAAEK,MAAM,cAAAR,kBAAA,cAAAA,kBAAA,GAAI,OAAO;EAC5C,OACCS,aAAA;IAAKC,SAAS,EAAC;EAAqC,GACjD,CAAEJ,oBAAoB,IAAIC,SAAS,EAAEI,WAAW,KACjDF,aAAA,CAACpB,YAAY;IACZa,EAAE,EAAGA,EAAI;IACTC,UAAU,EAAGA,UAAY;IACzBI,SAAS,EAAGA;EAAW,CACvB,CACD,EACDE,aAAA,CAACnB,UAAU,MAAE,CAAC,EACdmB,aAAA,CAAClB,gBAAgB,MAAE,CAAC,EAClB,CAAEiB,MAAM,KAAK,OAAO,IACnBJ,WAAW,KAAK,QAAQ,KACvBI,MAAM,KAAK,YAAY,IACxBA,MAAM,KAAK,aAAa,CAAI,KAAMC,aAAA,CAACjB,eAAe,MAAE,CAAC,EACxDiB,aAAA,CAAChB,eAAe,MAAE,CACd,CAAC;AAER,CAAE,CAAC;AAEH,eAAeK,cAAc","ignoreList":[]}