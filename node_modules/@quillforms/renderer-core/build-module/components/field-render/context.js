import { createElement } from "react";
/**
 * QuillForms dependencies
 */

/**
 * WordPress Dependencies
 */
import { createContext, useContext, useMemo } from '@wordpress/element';

/**
 * External Dependencies
 */
import { noop } from 'lodash';
const Context = createContext({
  id: undefined,
  blockName: undefined,
  attributes: undefined,
  isActive: false,
  shouldBeRendered: false,
  isSubmitBtnVisible: false,
  isErrMsgVisible: false,
  showErrMsg: noop,
  showNextBtn: noop,
  next: noop,
  isLastField: false
});
const {
  Provider
} = Context;
export const FieldRenderContextProvider = ({
  value,
  children
}) => {
  return createElement(Provider, {
    value: useMemo(() => value, Object.values(value))
  }, children);
};

/**
 * A hook that returns the block render context.
 *
 * @return {Object} Block render context
 */
export function __experimentalUseFieldRenderContext() {
  return useContext(Context);
}
//# sourceMappingURL=context.js.map