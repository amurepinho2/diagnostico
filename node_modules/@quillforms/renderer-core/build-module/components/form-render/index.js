import { createElement } from "react";
/**
 * QuillForms Dependencies
 */
import { sanitizeBlocks } from '@quillforms/blocks';
import { getDefaultMessages } from '@quillforms/utils';

/**
 * WordPress Dependencies
 */
import { useState, useEffect } from '@wordpress/element';
import { doAction } from '@wordpress/hooks';

/**
 * Internal Dependencies
 */
import { FormContextProvider } from '../form-context';
import FormWrapper from '../form-wrapper';
/**
 * External Dependencies
 */
import { map, shuffle, size } from 'lodash';
const Form = ({
  formObj,
  formId,
  onSubmit,
  applyLogic = false,
  beforeGoingNext,
  isPreview = false,
  customFonts
}) => {
  const [deviceWidth, setDeviceWidth] = useState('');
  useEffect(() => {
    function handleResize() {
      if (window.innerWidth < 600) {
        setDeviceWidth('mobile');
      } else {
        setDeviceWidth('desktop');
      }
    }
    window.addEventListener('resize', handleResize);
    handleResize();
    return () => window.removeEventListener('resize', handleResize);
  }, []);
  const formatFormObj = () => {
    // If not in preview mode, sanitize blocks.
    // In preview mode, sanitizing is already done in block editor resolvers.
    if (!isPreview) {
      formObj.blocks = sanitizeBlocks(formObj.blocks);
    }
    formObj.messages = {
      ...getDefaultMessages(),
      ...formObj.messages
    };
    const ParsedUrlSearch = typeof window !== 'undefined' ? new URLSearchParams(window?.location?.search?.substring(1)) : '';
    if (!formObj.settings) formObj.settings = {};
    formObj.settings = {
      disableProgressBar: false,
      disableWheelSwiping: false,
      disableNavigationArrows: false,
      animationDirection: 'vertical',
      showQuestionsNumbers: true,
      showLettersOnAnswers: true,
      saveAnswersInBrowser: false,
      displayBranding: false,
      ...formObj.settings
    };
    formObj.correctIncorrectQuiz = {
      enabled: false,
      questions: {},
      showAnswersDuringQuiz: true,
      ...formObj.correctIncorrectQuiz
    };
    formObj.blocks = map(formObj.blocks, $block => {
      if (($block.name === 'multiple-choice' || $block.name === 'dropdown' || $block.name === 'picture-choice') && $block?.attributes?.randomize && !isPreview) {
        var _$block$attributes$ch;
        return {
          ...$block,
          attributes: {
            ...$block.attributes,
            // @ts-expect-error
            choices: shuffle((_$block$attributes$ch = $block?.attributes?.choices) !== null && _$block$attributes$ch !== void 0 ? _$block$attributes$ch : [])
          }
        };
      }
      return $block;
    });

    // 'quillforms-redirection' is deprecated and will be removed.
    if (size(ParsedUrlSearch) > 0 &&
    // @ts-expect-error
    ParsedUrlSearch?.get('quillforms-shortcode')) {
      formObj.settings.disableWheelSwiping = true;
    }
    return formObj;
  };
  useEffect(() => {
    if (!isPreview) {
      doAction('QuillForms.RendererCore.Loaded');
    }
  }, []);
  return createElement(FormContextProvider, {
    value: {
      formObj: formatFormObj(),
      onSubmit,
      isPreview,
      formId,
      beforeGoingNext,
      deviceWidth,
      customFonts
    }
  }, createElement(FormWrapper, {
    applyLogic: applyLogic
  }));
};
export default Form;
//# sourceMappingURL=index.js.map