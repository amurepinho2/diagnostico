import { createElement } from "react";
/**
 * WordPress Dependencies
 */
import { useSelect } from '@wordpress/data';

/**
 * External Dependencies
 */
import { css } from 'emotion';
import classnames from 'classnames';

/**
 * Internal Dependencies
 */
import ArrowIcon from './arrow-icon';
import useBlockTheme from '../../hooks/use-block-theme';
const BlockCounter = ({
  blockType,
  attributes,
  id
}) => {
  const theme = useBlockTheme(attributes?.themeId);
  const {
    counter
  } = useSelect(select => {
    return {
      counter: select('quillForms/renderer-core').getBlockCounterValue(id)
    };
  });
  return createElement("div", {
    className: classnames('renderer-components-block-counter', css`
					color: ${theme.questionsColor};
					font-family: ${theme.questionsLabelFont};
					@media ( min-width: 768px ) {
						line-height: ${theme.questionsLabelLineHeight.lg} !important;
					}
					@media ( max-width: 767px ) {
						line-height: ${theme.questionsLabelLineHeight.sm} !important;
					}
				`)
  }, counter !== undefined && createElement("span", {
    className: "renderer-components-block-counter__value"
  }, counter + 1), createElement("span", {
    className: "renderer-components-block-counter__content"
  }, blockType?.counterIcon ? createElement(blockType.counterIcon, null) : createElement(ArrowIcon, {
    theme: theme
  })));
};
export default BlockCounter;
//# sourceMappingURL=index.js.map