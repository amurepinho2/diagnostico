{"version":3,"names":["SET_SWIPER_STATE","GO_NEXT","GO_PREV","COMPLETE_FORM","GO_TO_BLOCK","SET_SUBMISSION_ERR","SET_IS_REVIEWING","SET_IS_SUBMITTING","SET_PAYMENT_DATA","SET_FIELD_ANSWER","SET_IS_FIELD_ANSWERED","SET_IS_FIELD_PENDING","SET_FIELD_PENDING_MSG","SET_IS_FIELD_VALID","INSERT_EMPTY_FIELD_ANSWER","SET_FIELD_VALIDATION_ERR","SET_CORRECT_INCORRECT_DISPLAY","SET_IS_FIELD_ANSWER_LOCKED","SET_IS_FIELD_CORRECT_INCORRECT_SCREEN_DISPLAYED","RESET_ANSWERS","SET_IS_FOCUSED","SET_FOOTER_DISPLAY","SET_IS_FIELD_ANSWER_CORRECT","SET_THANKYOU_SCREENS","SET_IS_CURRENT_BLOCK_SAFE_TO_SWIPE","setSwiper","swiperState","type","goNext","isSwiping","goPrev","goToBlock","id","forceUpdateState","completeForm","resetAnswers","insertEmptyFieldAnswer","blockName","setFieldAnswer","val","setIsFieldValid","setIsFieldAnswered","setIsFieldPending","setFieldPendingMsg","setFieldValidationErr","setIsReviewing","setIsSubmitting","setSubmissionErr","setPaymentData","data","setIsFocused","setFooterDisplay","setIsCurrentBlockSafeToSwipe","setIsFieldAnswerCorrect","setIsFieldAnswerLocked","setIsFieldCorrectIncorrectScreenDisplayed","setCorrectIncorrectDisplay","setThankyouScreens","screens"],"sources":["@quillforms/renderer-core/src/store/actions.ts"],"sourcesContent":["import { Screen } from './types';\r\nimport {\r\n\tSET_SWIPER_STATE,\r\n\tGO_NEXT,\r\n\tGO_PREV,\r\n\tCOMPLETE_FORM,\r\n\tGO_TO_BLOCK,\r\n\tSET_SUBMISSION_ERR,\r\n\tSET_IS_REVIEWING,\r\n\tSET_IS_SUBMITTING,\r\n\tSET_PAYMENT_DATA,\r\n\tSET_FIELD_ANSWER,\r\n\tSET_IS_FIELD_ANSWERED,\r\n\tSET_IS_FIELD_PENDING,\r\n\tSET_FIELD_PENDING_MSG,\r\n\tSET_IS_FIELD_VALID,\r\n\tINSERT_EMPTY_FIELD_ANSWER,\r\n\tSET_FIELD_VALIDATION_ERR,\r\n\tSET_CORRECT_INCORRECT_DISPLAY,\r\n\tSET_IS_FIELD_ANSWER_LOCKED,\r\n\tSET_IS_FIELD_CORRECT_INCORRECT_SCREEN_DISPLAYED,\r\n\tRESET_ANSWERS,\r\n\tSET_IS_FOCUSED,\r\n\tSET_FOOTER_DISPLAY,\r\n\tSET_IS_FIELD_ANSWER_CORRECT,\r\n\tSET_THANKYOU_SCREENS,\r\n\tSET_IS_CURRENT_BLOCK_SAFE_TO_SWIPE\r\n} from './constants';\r\n\r\nimport type {\r\n\tSwiperState,\r\n\tSwiperActionTypes,\r\n\tRendererAnswersActionTypes,\r\n\tSubmitActionTypes,\r\n} from './types';\r\n\r\n/**\r\n \r\n * Returns an action object used in setting swiper state\r\n *\r\n * @param {SwiperState} swiperState New swiper state.\r\n *\r\n * @return {SwiperActionTypes} Action object.\r\n */\r\nexport const setSwiper = (\r\n\tswiperState: Partial<SwiperState>\r\n): SwiperActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_SWIPER_STATE,\r\n\t\tswiperState,\r\n\t};\r\n};\r\n\r\n/**\r\n * Go to next block\r\n *\r\n * @param {boolean} isSwiping Is swiping\r\n *\r\n * @return {SwiperActionTypes} Action object.\r\n */\r\nexport const goNext = (isSwiping: boolean = false): SwiperActionTypes => {\r\n\treturn {\r\n\t\ttype: GO_NEXT,\r\n\t\tisSwiping,\r\n\t};\r\n};\r\n\r\n/**\r\n * Go to previous block\r\n *\r\n * @return {SwiperActionTypes} Action object.\r\n */\r\nexport const goPrev = (): SwiperActionTypes => {\r\n\treturn {\r\n\t\ttype: GO_PREV,\r\n\t};\r\n};\r\n\r\n/**\r\n * Go to a specific field\r\n *\r\n * @param {string} id               The field id.\r\n *\r\n * @param          forceUpdateState\r\n * @return {SwiperActionTypes} Action object.\r\n */\r\nexport const goToBlock = (\r\n\tid: string,\r\n\tforceUpdateState = false\r\n): SwiperActionTypes => {\r\n\treturn {\r\n\t\ttype: GO_TO_BLOCK,\r\n\t\tid,\r\n\t\tforceUpdateState,\r\n\t};\r\n};\r\n\r\n/**\r\n * Complete form and show thank you screen\r\n *\r\n * @return {SwiperActionTypes} Action object\r\n */\r\nexport const completeForm = (): SwiperActionTypes => {\r\n\treturn {\r\n\t\ttype: COMPLETE_FORM,\r\n\t};\r\n};\r\n\r\n/**\r\n * Reset answers\r\n *\r\n * @return {RendererAnswersActionTypes} Action object.\r\n */\r\nexport const resetAnswers = (): RendererAnswersActionTypes => {\r\n\treturn {\r\n\t\ttype: RESET_ANSWERS,\r\n\t};\r\n};\r\n/**\r\n * Returns an action object used in inserting empty field answer.\r\n *\r\n * @param {string} id        Field uuid.\r\n * @param {string} type      Field type\r\n *\r\n * @param          blockName\r\n * @return {RendererAnswersActionTypes} Action object.\r\n */\r\nexport const insertEmptyFieldAnswer = (\r\n\tid: string,\r\n\tblockName: string\r\n): RendererAnswersActionTypes => {\r\n\treturn {\r\n\t\ttype: INSERT_EMPTY_FIELD_ANSWER,\r\n\t\tid,\r\n\t\tblockName,\r\n\t};\r\n};\r\n\r\n/**\r\n * Returns an action object used in setting field answer.\r\n *\r\n * @param {string}  id  Field uuid.\r\n * @param {unknown} val Field value could be string, array, number or any type.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport const setFieldAnswer = (\r\n\tid: string,\r\n\tval: unknown\r\n): RendererAnswersActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_FIELD_ANSWER,\r\n\t\tid,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Returns an action object used in setting field valid flag.\r\n *\r\n * @param {string}  id  Field uuid.\r\n * @param {boolean} val Field isValid flag.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport const setIsFieldValid = (\r\n\tid: string,\r\n\tval: boolean\r\n): RendererAnswersActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_IS_FIELD_VALID,\r\n\t\tid,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Returns an action object used in setting fields answered flag.\r\n *\r\n * @param {string}  id  Field uuid.\r\n * @param {boolean} val Field isAnswered flag.\r\n *\r\n * @return {RendererAnswersActionTypes} Action object.\r\n */\r\nexport const setIsFieldAnswered = (\r\n\tid: string,\r\n\tval: boolean\r\n): RendererAnswersActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_IS_FIELD_ANSWERED,\r\n\t\tid,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Returns an action object used in setting fields pending flag.\r\n *\r\n * @param {string}  id  Field uuid.\r\n * @param {boolean} val Field isPending flag.\r\n *\r\n * @return {RendererAnswersActionTypes} Action object.\r\n */\r\nexport const setIsFieldPending = (\r\n\tid: string,\r\n\tval: boolean\r\n): RendererAnswersActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_IS_FIELD_PENDING,\r\n\t\tid,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Returns and object used in setting pending message key\r\n *\r\n * @param {string} id  Field uuid.\r\n * @param {string} val Field pendingMsg flag.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport const setFieldPendingMsg = (\r\n\tid: string,\r\n\tval: string\r\n): RendererAnswersActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_FIELD_PENDING_MSG,\r\n\t\tid,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Returns and object used in setting error message key\r\n *\r\n * @param {string} id  Field uuid.\r\n * @param {string} val Field isAnswered flag.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport const setFieldValidationErr = (\r\n\tid: string,\r\n\tval: string\r\n): RendererAnswersActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_FIELD_VALIDATION_ERR,\r\n\t\tid,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Set is reviewing flag\r\n *\r\n * @param {boolean} val The new flag value.\r\n *\r\n * @return {Object} Action object\r\n */\r\nexport const setIsReviewing = (val: boolean): SubmitActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_IS_REVIEWING,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Set is submitting flag.\r\n *\r\n * @param {boolean} val The new flag value.\r\n *\r\n * @return {Object} Action object\r\n */\r\nexport const setIsSubmitting = (val: boolean): SubmitActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_IS_SUBMITTING,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Set submission errors.\r\n *\r\n * @param {string} val The new submission errors.\r\n *\r\n * @return {Object} Action object\r\n */\r\nexport const setSubmissionErr = (val: string): SubmitActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_SUBMISSION_ERR,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Set payment data\r\n *\r\n * @param  data\r\n * @return {SwiperActionTypes} Action object\r\n */\r\nexport const setPaymentData = (data: any): SubmitActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_PAYMENT_DATA,\r\n\t\tdata,\r\n\t};\r\n};\r\n\r\n/**\r\n * Set isFocused flag\r\n *\r\n * @param {boolean} val The new flag value.\r\n *\r\n * @return {Object} Action object\r\n */\r\nexport const setIsFocused = (val: boolean) => {\r\n\treturn {\r\n\t\ttype: SET_IS_FOCUSED,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Set footerDisplay flag\r\n * This flag will alomst be needed to control in touch screens.\r\n *\r\n * @param {boolean} val The new flag value.\r\n *\r\n * @return {Object} Action object\r\n */\r\nexport const setFooterDisplay = (val: boolean) => {\r\n\treturn {\r\n\t\ttype: SET_FOOTER_DISPLAY,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n/**\r\n * Set isCurrentBlockSafeToSwipe flag\r\n * This flag should control going to the next block.\r\n *\r\n * @param {boolean} val The new flag value.\r\n *\r\n * @return {Object} Action object\r\n */\r\nexport const setIsCurrentBlockSafeToSwipe = (val: boolean) => {\r\n\treturn {\r\n\t\ttype: SET_IS_CURRENT_BLOCK_SAFE_TO_SWIPE,\r\n\t\tval,\r\n\t};\r\n};\r\n\r\n\r\n/**\r\n * Set Is Field Answer Correct\r\n * \r\n * \r\n * @param {string} id  Field uid.\r\n * @param {boolean} val Field isCorrect flag.\r\n */\r\nexport const setIsFieldAnswerCorrect = (\r\n\tid: string,\r\n\tval: boolean\r\n): RendererAnswersActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_IS_FIELD_ANSWER_CORRECT,\r\n\t\tid,\r\n\t\tval,\r\n\t};\r\n}\r\n\r\n/**\r\n * Set Is answer locked\r\n * @param {string} id  Field uid.\r\n * @param {boolean} val Field isCorrect flag.\r\n */\r\nexport const setIsFieldAnswerLocked = (\r\n\tid: string,\r\n\tval: boolean\r\n): RendererAnswersActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_IS_FIELD_ANSWER_LOCKED,\r\n\t\tid,\r\n\t\tval,\r\n\t}\r\n}\r\n\r\n/**\r\n * Set Is Field correct incorrect screen displayed\r\n * @param val \r\n * @returns \r\n */\r\nexport const setIsFieldCorrectIncorrectScreenDisplayed = (\r\n\tid: string,\r\n\tval: boolean\r\n): RendererAnswersActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_IS_FIELD_CORRECT_INCORRECT_SCREEN_DISPLAYED,\r\n\t\tid,\r\n\t\tval,\r\n\t}\r\n}\r\n\r\n\r\nexport const setCorrectIncorrectDisplay = (\r\n\tval: boolean\r\n): SwiperActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_CORRECT_INCORRECT_DISPLAY,\r\n\t\tval,\r\n\t};\r\n}\r\n\r\nexport const setThankyouScreens = (\r\n\tscreens: Screen[]\r\n): SwiperActionTypes => {\r\n\treturn {\r\n\t\ttype: SET_THANKYOU_SCREENS,\r\n\t\tscreens,\r\n\t};\r\n}"],"mappings":"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","ignoreList":[]}