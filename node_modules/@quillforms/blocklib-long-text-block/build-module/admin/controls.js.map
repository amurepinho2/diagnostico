{"version":3,"names":["BaseControl","ControlWrapper","ControlLabel","ToggleControl","TextControl","Fragment","LongTextControl","attributes","setAttributes","setMaxCharacters","maxCharacters","minCharacters","createElement","orientation","label","isNew","checked","onChange","type","val","value"],"sources":["@quillforms/blocklib-long-text-block/src/admin/controls.js"],"sourcesContent":["/**\r\n * QuillForms Dependencies\r\n */\r\nimport {\r\n\tBaseControl,\r\n\tControlWrapper,\r\n\tControlLabel,\r\n\tToggleControl,\r\n\tTextControl,\r\n} from '@quillforms/admin-components';\r\n\r\n/**\r\n * WordPress Dependencies\r\n */\r\nimport { Fragment } from 'react';\r\n\r\nconst LongTextControl = ( { attributes, setAttributes } ) => {\r\n\tconst { setMaxCharacters, maxCharacters, minCharacters } = attributes;\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<BaseControl>\r\n\t\t\t\t<ControlWrapper orientation=\"horizontal\">\r\n\t\t\t\t\t<ControlLabel label=\"Min Characters\" isNew />\r\n\t\t\t\t\t<ToggleControl\r\n\t\t\t\t\t\tchecked={ minCharacters !== false }\r\n\t\t\t\t\t\tonChange={ () => {\r\n\t\t\t\t\t\t\tsetAttributes( {\r\n\t\t\t\t\t\t\t\tminCharacters:\r\n\t\t\t\t\t\t\t\t\tminCharacters !== false ? false : 0,\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t} }\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ControlWrapper>\r\n\t\t\t\t{ minCharacters !== false && (\r\n\t\t\t\t\t<TextControl\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tonChange={ ( val ) => {\r\n\t\t\t\t\t\t\tsetAttributes( {\r\n\t\t\t\t\t\t\t\tminCharacters: val,\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t} }\r\n\t\t\t\t\t/>\r\n\t\t\t\t) }\r\n\t\t\t</BaseControl>\r\n\t\t\t<BaseControl>\r\n\t\t\t\t<ControlWrapper orientation=\"horizontal\">\r\n\t\t\t\t\t<ControlLabel label=\"Max Characters\" />\r\n\t\t\t\t\t<ToggleControl\r\n\t\t\t\t\t\tchecked={ setMaxCharacters }\r\n\t\t\t\t\t\tonChange={ () => {\r\n\t\t\t\t\t\t\tsetAttributes( {\r\n\t\t\t\t\t\t\t\tsetMaxCharacters: ! setMaxCharacters,\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t} }\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ControlWrapper>\r\n\t\t\t\t{ setMaxCharacters && (\r\n\t\t\t\t\t<TextControl\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tvalue={ maxCharacters }\r\n\t\t\t\t\t\tonChange={ ( val ) =>\r\n\t\t\t\t\t\t\tsetAttributes( {\r\n\t\t\t\t\t\t\t\tmaxCharacters: val,\r\n\t\t\t\t\t\t\t} )\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) }\r\n\t\t\t</BaseControl>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\nexport default LongTextControl;\r\n"],"mappings":";AAAA;AACA;AACA;AACA,SACCA,WAAW,EACXC,cAAc,EACdC,YAAY,EACZC,aAAa,EACbC,WAAW,QACL,8BAA8B;;AAErC;AACA;AACA;AACA,SAASC,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,eAAe,GAAGA,CAAE;EAAEC,UAAU;EAAEC;AAAc,CAAC,KAAM;EAC5D,MAAM;IAAEC,gBAAgB;IAAEC,aAAa;IAAEC;EAAc,CAAC,GAAGJ,UAAU;EAErE,OACCK,aAAA,CAACP,QAAQ,QACRO,aAAA,CAACZ,WAAW,QACXY,aAAA,CAACX,cAAc;IAACY,WAAW,EAAC;EAAY,GACvCD,aAAA,CAACV,YAAY;IAACY,KAAK,EAAC,gBAAgB;IAACC,KAAK;EAAA,CAAE,CAAC,EAC7CH,aAAA,CAACT,aAAa;IACba,OAAO,EAAGL,aAAa,KAAK,KAAO;IACnCM,QAAQ,EAAGA,CAAA,KAAM;MAChBT,aAAa,CAAE;QACdG,aAAa,EACZA,aAAa,KAAK,KAAK,GAAG,KAAK,GAAG;MACpC,CAAE,CAAC;IACJ;EAAG,CACH,CACc,CAAC,EACfA,aAAa,KAAK,KAAK,IACxBC,aAAA,CAACR,WAAW;IACXc,IAAI,EAAC,QAAQ;IACbD,QAAQ,EAAKE,GAAG,IAAM;MACrBX,aAAa,CAAE;QACdG,aAAa,EAAEQ;MAChB,CAAE,CAAC;IACJ;EAAG,CACH,CAEU,CAAC,EACdP,aAAA,CAACZ,WAAW,QACXY,aAAA,CAACX,cAAc;IAACY,WAAW,EAAC;EAAY,GACvCD,aAAA,CAACV,YAAY;IAACY,KAAK,EAAC;EAAgB,CAAE,CAAC,EACvCF,aAAA,CAACT,aAAa;IACba,OAAO,EAAGP,gBAAkB;IAC5BQ,QAAQ,EAAGA,CAAA,KAAM;MAChBT,aAAa,CAAE;QACdC,gBAAgB,EAAE,CAAEA;MACrB,CAAE,CAAC;IACJ;EAAG,CACH,CACc,CAAC,EACfA,gBAAgB,IACjBG,aAAA,CAACR,WAAW;IACXc,IAAI,EAAC,QAAQ;IACbE,KAAK,EAAGV,aAAe;IACvBO,QAAQ,EAAKE,GAAG,IACfX,aAAa,CAAE;MACdE,aAAa,EAAES;IAChB,CAAE;EACF,CACD,CAEU,CACJ,CAAC;AAEb,CAAC;AACD,eAAeb,eAAe","ignoreList":[]}