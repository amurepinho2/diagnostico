{"ast":null,"code":"import { createElement, Fragment } from \"react\";\n/**\r\n * WordPress Dependencies\r\n */\n// import { autop } from '@wordpress/autop';\n\n/**\r\n * External Dependencies\r\n */\nimport parse from 'html-react-parser';\n\n/**\r\n * Internal Dependencies\r\n */\nimport MergeTag from '../merge-tag';\nconst HtmlParser = ({\n  value\n}) => {\n  if (!value) return null;\n  value = value.replace(/{{([a-zA-Z0-9-_]+):([a-zA-Z0-9-_]+)}}/g, (_match, p1, p2) => {\n    return `<mergetag type='${p1}' modifier='${p2}'></mergetag>`;\n  });\n  value = '<p>' + value.replaceAll('\\n\\n', '<br />') + '</p>';\n  const res = createElement(Fragment, null, parse(value, {\n    replace: domNode => {\n      if (\n      // @ts-expect-error\n      domNode?.name === 'mergetag') {\n        // @ts-expect-error\n        const {\n          modifier,\n          type\n        } = domNode.attribs;\n        return createElement(MergeTag, {\n          type: type,\n          modifier: modifier\n        });\n      }\n    }\n  }));\n  return createElement(\"div\", {\n    className: \"renderer-core-html-parser\"\n  }, res, \" \");\n};\nexport default HtmlParser;","map":{"version":3,"names":["parse","MergeTag","HtmlParser","value","replace","_match","p1","p2","replaceAll","res","createElement","Fragment","domNode","name","modifier","type","attribs","className"],"sources":["/Users/amurepinho/Documents/GitHub/diagnostico/node_modules/@quillforms/renderer-core/build-module/components/html-parser/@quillforms/renderer-core/src/components/html-parser/index.tsx"],"sourcesContent":["/**\r\n * WordPress Dependencies\r\n */\r\n// import { autop } from '@wordpress/autop';\r\n\r\n/**\r\n * External Dependencies\r\n */\r\nimport parse from 'html-react-parser';\r\n\r\n/**\r\n * Internal Dependencies\r\n */\r\nimport MergeTag from '../merge-tag';\r\n\r\ninterface Props {\r\n\tvalue: string | undefined;\r\n}\r\nconst HtmlParser: React.FC< Props > = ( { value } ) => {\r\n\tif ( ! value ) return null;\r\n\tvalue = value.replace(\r\n\t\t/{{([a-zA-Z0-9-_]+):([a-zA-Z0-9-_]+)}}/g,\r\n\t\t( _match, p1, p2 ) => {\r\n\t\t\treturn `<mergetag type='${ p1 }' modifier='${ p2 }'></mergetag>`;\r\n\t\t}\r\n\t);\r\n\r\n\tvalue = '<p>' + value.replaceAll( '\\n\\n', '<br />' ) + '</p>';\r\n\tconst res = (\r\n\t\t<>\r\n\t\t\t{ parse( value, {\r\n\t\t\t\treplace: ( domNode ): void | JSX.Element => {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t// @ts-expect-error\r\n\t\t\t\t\t\tdomNode?.name === 'mergetag'\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\t// @ts-expect-error\r\n\t\t\t\t\t\tconst { modifier, type } = domNode.attribs;\r\n\t\t\t\t\t\treturn <MergeTag type={ type } modifier={ modifier } />;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t} ) }\r\n\t\t</>\r\n\t);\r\n\treturn <div className=\"renderer-core-html-parser\">{ res } </div>;\r\n};\r\nexport default HtmlParser;\r\n"],"mappings":";AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,mBAAmB;;AAErC;AACA;AACA;AACA,OAAOC,QAAQ,MAAM,cAAc;AAKnC,MAAMC,UAA6B,GAAGA,CAAE;EAAEC;AAAM,CAAC,KAAM;EACtD,IAAK,CAAEA,KAAK,EAAG,OAAO,IAAI;EAC1BA,KAAK,GAAGA,KAAK,CAACC,OAAO,CACpB,wCAAwC,EACxC,CAAEC,MAAM,EAAEC,EAAE,EAAEC,EAAE,KAAM;IACrB,OAAQ,mBAAmBD,EAAI,eAAeC,EAAI,eAAc;EACjE,CACD,CAAC;EAEDJ,KAAK,GAAG,KAAK,GAAGA,KAAK,CAACK,UAAU,CAAE,MAAM,EAAE,QAAS,CAAC,GAAG,MAAM;EAC7D,MAAMC,GAAG,GACRC,aAAA,CAAAC,QAAA,QACGX,KAAK,CAAEG,KAAK,EAAE;IACfC,OAAO,EAAIQ,OAAO,IAA0B;MAC3C;MACC;MACAA,OAAO,EAAEC,IAAI,KAAK,UAAU,EAC3B;QACD;QACA,MAAM;UAAEC,QAAQ;UAAEC;QAAK,CAAC,GAAGH,OAAO,CAACI,OAAO;QAC1C,OAAON,aAAA,CAACT,QAAQ;UAACc,IAAI,EAAGA,IAAM;UAACD,QAAQ,EAAGA;QAAU,CAAE,CAAC;MACxD;IACD;EACD,CAAE,CACD,CACF;EACD,OAAOJ,aAAA;IAAKO,SAAS,EAAC;EAA2B,GAAGR,GAAG,EAAE,GAAM,CAAC;AACjE,CAAC;AACD,eAAeP,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}