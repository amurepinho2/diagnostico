{"ast":null,"code":"import { createElement, Fragment } from \"react\";\nimport { __experimentalUseFieldRenderContext } from '../field-render';\nconst AttributeMergeTag = ({\n  modifier\n}) => {\n  const {\n    attributes\n  } = __experimentalUseFieldRenderContext();\n  let modifierRender = createElement(Fragment, null, \"_ _ _ _ _\");\n  if (attributes && attributes[modifier]) {\n    modifierRender = createElement(Fragment, null, \" \", attributes[modifier], \" \");\n  }\n  return createElement(Fragment, null, modifierRender, \" \");\n};\nexport default AttributeMergeTag;","map":{"version":3,"names":["__experimentalUseFieldRenderContext","AttributeMergeTag","modifier","attributes","modifierRender","createElement","Fragment"],"sources":["/Users/amurepinho/Documents/GitHub/diagnostico/node_modules/@quillforms/renderer-core/build-module/components/merge-tag/@quillforms/renderer-core/src/components/merge-tag/attribute.tsx"],"sourcesContent":["import { __experimentalUseFieldRenderContext } from '../field-render';\r\n\r\ninterface Props {\r\n\tmodifier: string;\r\n}\r\nconst AttributeMergeTag: React.FC< Props > = ( { modifier } ) => {\r\n\tconst { attributes } = __experimentalUseFieldRenderContext();\r\n\tlet modifierRender: React.ReactNode = <>_ _ _ _ _</>;\r\n\tif ( attributes && attributes[ modifier ] ) {\r\n\t\tmodifierRender = <> { attributes[ modifier ] } </>;\r\n\t}\r\n\treturn <>{ modifierRender } </>;\r\n};\r\nexport default AttributeMergeTag;\r\n"],"mappings":";AAAA,SAASA,mCAAmC,QAAQ,iBAAiB;AAKrE,MAAMC,iBAAoC,GAAGA,CAAE;EAAEC;AAAS,CAAC,KAAM;EAChE,MAAM;IAAEC;EAAW,CAAC,GAAGH,mCAAmC,CAAC,CAAC;EAC5D,IAAII,cAA+B,GAAGC,aAAA,CAAAC,QAAA,QAAE,WAAW,CAAC;EACpD,IAAKH,UAAU,IAAIA,UAAU,CAAED,QAAQ,CAAE,EAAG;IAC3CE,cAAc,GAAGC,aAAA,CAAAC,QAAA,QAAE,GAAC,EAAEH,UAAU,CAAED,QAAQ,CAAE,EAAE,GAAG,CAAC;EACnD;EACA,OAAOG,aAAA,CAAAC,QAAA,QAAIF,cAAc,EAAE,GAAG,CAAC;AAChC,CAAC;AACD,eAAeH,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}