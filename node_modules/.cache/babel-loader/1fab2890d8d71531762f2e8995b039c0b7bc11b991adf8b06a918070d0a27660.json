{"ast":null,"code":"/**\r\n * WordPress Dependencies\r\n */\nimport { useSelect } from '@wordpress/data';\nimport useFlattenedBlocks from './use-flattened-blocks';\nconst useProgressPerecent = () => {\n  const {\n    answers,\n    walkPath,\n    blockTypes\n  } = useSelect(select => {\n    return {\n      walkPath: select('quillForms/renderer-core').getWalkPath(),\n      answers: select('quillForms/renderer-core').getAnswers(),\n      blockTypes: select('quillForms/blocks').getBlockTypes()\n    };\n  });\n  const allBlocks = useFlattenedBlocks(walkPath);\n  let editableBlocksLength = 0;\n  let answered = 0;\n  allBlocks.forEach(field => {\n    if (blockTypes[field?.name]?.supports.editable) {\n      editableBlocksLength++;\n      if (answers[field?.id]?.value) {\n        answered++;\n      }\n    }\n  });\n  const getPercent = () => {\n    const percent = Math.round(answered * 100 / editableBlocksLength);\n    if (isNaN(percent)) return 0;\n    return percent;\n  };\n  return getPercent();\n};\nexport default useProgressPerecent;","map":{"version":3,"names":["useSelect","useFlattenedBlocks","useProgressPerecent","answers","walkPath","blockTypes","select","getWalkPath","getAnswers","getBlockTypes","allBlocks","editableBlocksLength","answered","forEach","field","name","supports","editable","id","value","getPercent","percent","Math","round","isNaN"],"sources":["/Users/amurepinho/Documents/GitHub/diagnostico/node_modules/@quillforms/renderer-core/build-module/hooks/@quillforms/renderer-core/src/hooks/use-progress-percent.ts"],"sourcesContent":["/**\r\n * WordPress Dependencies\r\n */\r\nimport { useSelect } from '@wordpress/data';\r\nimport useFlattenedBlocks from './use-flattened-blocks';\r\nimport { FormBlocks } from '@quillforms/types/src';\r\n\r\nconst useProgressPerecent = () => {\r\n\tconst { answers, walkPath, blockTypes } = useSelect( ( select ) => {\r\n\t\treturn {\r\n\t\t\twalkPath: select( 'quillForms/renderer-core' ).getWalkPath(),\r\n\t\t\tanswers: select( 'quillForms/renderer-core' ).getAnswers(),\r\n\t\t\tblockTypes: select( 'quillForms/blocks' ).getBlockTypes(),\r\n\t\t};\r\n\t} );\r\n\tconst allBlocks: FormBlocks = useFlattenedBlocks( walkPath );\r\n\tlet editableBlocksLength = 0;\r\n\tlet answered = 0;\r\n\tallBlocks.forEach( ( field ) => {\r\n\t\tif ( blockTypes[ field?.name ]?.supports.editable ) {\r\n\t\t\teditableBlocksLength++;\r\n\t\t\tif ( answers[ field?.id ]?.value ) {\r\n\t\t\t\tanswered++;\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\tconst getPercent = () => {\r\n\t\tconst percent = Math.round( ( answered * 100 ) / editableBlocksLength );\r\n\t\tif ( isNaN( percent ) ) return 0;\r\n\t\treturn percent;\r\n\t};\r\n\r\n\treturn getPercent();\r\n};\r\n\r\nexport default useProgressPerecent;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,kBAAkB,MAAM,wBAAwB;AAGvD,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EACjC,MAAM;IAAEC,OAAO;IAAEC,QAAQ;IAAEC;EAAW,CAAC,GAAGL,SAAS,CAAIM,MAAM,IAAM;IAClE,OAAO;MACNF,QAAQ,EAAEE,MAAM,CAAE,0BAA2B,CAAC,CAACC,WAAW,CAAC,CAAC;MAC5DJ,OAAO,EAAEG,MAAM,CAAE,0BAA2B,CAAC,CAACE,UAAU,CAAC,CAAC;MAC1DH,UAAU,EAAEC,MAAM,CAAE,mBAAoB,CAAC,CAACG,aAAa,CAAC;IACzD,CAAC;EACF,CAAE,CAAC;EACH,MAAMC,SAAqB,GAAGT,kBAAkB,CAAEG,QAAS,CAAC;EAC5D,IAAIO,oBAAoB,GAAG,CAAC;EAC5B,IAAIC,QAAQ,GAAG,CAAC;EAChBF,SAAS,CAACG,OAAO,CAAIC,KAAK,IAAM;IAC/B,IAAKT,UAAU,CAAES,KAAK,EAAEC,IAAI,CAAE,EAAEC,QAAQ,CAACC,QAAQ,EAAG;MACnDN,oBAAoB,EAAE;MACtB,IAAKR,OAAO,CAAEW,KAAK,EAAEI,EAAE,CAAE,EAAEC,KAAK,EAAG;QAClCP,QAAQ,EAAE;MACX;IACD;EACD,CAAE,CAAC;EACH,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACxB,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAAIX,QAAQ,GAAG,GAAG,GAAKD,oBAAqB,CAAC;IACvE,IAAKa,KAAK,CAAEH,OAAQ,CAAC,EAAG,OAAO,CAAC;IAChC,OAAOA,OAAO;EACf,CAAC;EAED,OAAOD,UAAU,CAAC,CAAC;AACpB,CAAC;AAED,eAAelB,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}