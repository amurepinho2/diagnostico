{"ast":null,"code":"import compile from '@tannin/compile';\n\n/**\n * Given a C expression, returns a function which, when called with a value,\n * evaluates the result with the value assumed to be the \"n\" variable of the\n * expression. The result will be coerced to its numeric equivalent.\n *\n * @param {string} expression C expression.\n *\n * @return {Function} Evaluator function.\n */\nexport default function pluralForms(expression) {\n  var evaluate = compile(expression);\n  return function (n) {\n    return +evaluate({\n      n: n\n    });\n  };\n}","map":{"version":3,"names":["compile","pluralForms","expression","evaluate","n"],"sources":["/Users/amurepinho/Documents/GitHub/diagnostico/node_modules/@tannin/plural-forms/index.js"],"sourcesContent":["import compile from '@tannin/compile';\n\n/**\n * Given a C expression, returns a function which, when called with a value,\n * evaluates the result with the value assumed to be the \"n\" variable of the\n * expression. The result will be coerced to its numeric equivalent.\n *\n * @param {string} expression C expression.\n *\n * @return {Function} Evaluator function.\n */\nexport default function pluralForms( expression ) {\n\tvar evaluate = compile( expression );\n\n\treturn function( n ) {\n\t\treturn +evaluate( { n: n } );\n\t};\n}\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,iBAAiB;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,WAAWA,CAAEC,UAAU,EAAG;EACjD,IAAIC,QAAQ,GAAGH,OAAO,CAAEE,UAAW,CAAC;EAEpC,OAAO,UAAUE,CAAC,EAAG;IACpB,OAAO,CAACD,QAAQ,CAAE;MAAEC,CAAC,EAAEA;IAAE,CAAE,CAAC;EAC7B,CAAC;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}